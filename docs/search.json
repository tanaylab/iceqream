[{"path":"https://tanaylab.github.io/iceqream/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"IceQream","text":"IceQream (Interpretable Computational Engine Quantitative Regression Enhancer ATAC Motifs) package regressing accessibility DNA sequences. models TF effective concentrations latent variables activate repress regulatory elements nonlinear fashion, possible contribution pairwise interactions synergistic chromosomal domain effects. vignette demonstrates use IceQream analyze chromosome accessibility data, focusing sample 5000 loci mouse gastrulation trajectory Epiblast Early nascent mesoderm. analysis can help identify key regulatory elements transcription factors involved cellular differentiation processes, understand quantitatively contribute observed changes chromatin accessibility.","code":""},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"setup-and-data-preparation","dir":"Articles","previous_headings":"","what":"Setup and Data Preparation","title":"IceQream","text":"First, let’s load necessary packages set environment:","code":"library(iceqream) #> Loading required package: misha library(misha) library(misha.ext)"},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"creating-a-misha-genome","dir":"Articles","previous_headings":"Setup and Data Preparation","what":"Creating a misha genome","title":"IceQream","text":"start creating misha database mm10 genome. already mm10 misha database can skip part load genome using gsetroot(\"path//mm10\").","code":"gdb.create_genome(\"mm10\") gsetroot(\"mm10\")"},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"downloading-example-data","dir":"Articles","previous_headings":"Setup and Data Preparation","what":"Downloading Example Data","title":"IceQream","text":"See minimal instructions use IceQream data. tutorial, ’ll use pre-prepared data sample mouse gastrulation trajectory. Let’s download load data: Let’s examine structure input data: peak_intervals dataframe contains genomic positions accessibility peaks. atac_scores matrix contains ATAC-seq signal intensities peak across different stages trajectory. additional_features includes extra genomic features peak.","code":"download.file(\"https://iceqream.s3.eu-west-1.amazonaws.com/gastrulation-example.tar.gz\", \"gastrulation-example.tar.gz\") untar(\"gastrulation-example.tar.gz\") peak_intervals <- readr::read_rds(\"gastrulation-example/peak_intervals.rds\") atac_scores <- readr::read_rds(\"gastrulation-example/atac_scores.rds\") additional_features <- readr::read_rds(\"gastrulation-example/additional_features.rds\") normalization_intervals <- readr::read_tsv(\"gastrulation-example/gastrulation_intervals.tsv\", show_col_types = FALSE) # Peak intervals head(peak_intervals) #> # A tibble: 6 × 6 #>   chrom     start       end peak_name       const tss_dist #>   <chr>     <dbl>     <dbl> <chr>           <lgl>    <dbl> #> 1 chrX  162915760 162916060 5289_Ctps2_58   FALSE    13589 #> 2 chr14 102806560 102806860 1627_Lmo7_1306  FALSE     8155 #> 3 chr18  74739880  74740180 2390_Myo5b_32   FALSE     6115 #> 4 chr5   98166060  98166360 3695_Fgf5_4     FALSE   -14508 #> 5 chr7   26775960  26776260 4228_Nlrp9c_413 FALSE    18818 #> 6 chr10  28636080  28636380 432_Ptprk_786   FALSE   -31979 print(paste(\"Number of peaks:\", nrow(peak_intervals))) #> [1] \"Number of peaks: 5000\" # ATAC scores head(atac_scores) #>                       bin1       bin2       bin3       bin4 #> 5289_Ctps2_58   0.28664573 0.21607409 0.15598945 0.18531872 #> 1627_Lmo7_1306  0.06559805 0.10535270 0.14138811 0.18453988 #> 2390_Myo5b_32   0.01259770 0.01340993 0.02850534 0.03999234 #> 3695_Fgf5_4     0.35906208 0.37084859 0.49515351 0.83097388 #> 4228_Nlrp9c_413 0.75004775 0.64881577 0.41868309 0.32506901 #> 432_Ptprk_786   0.36038245 0.22897889 0.18171044 0.02891232 print(paste(\"Number of peaks:\", nrow(atac_scores))) #> [1] \"Number of peaks: 5000\" print(paste(\"Number of bins:\", ncol(atac_scores))) #> [1] \"Number of bins: 4\" # Additional features head(additional_features) #>                    cg_cont     k4me3    k27me3    k27ac prox_bin1_punc_all #> 5289_Ctps2_58   0.73947831 0.9540617  5.733111 2.062427          0.5903188 #> 1627_Lmo7_1306  1.88216323 0.9540617  3.094265 2.976209          0.6168619 #> 2390_Myo5b_32   0.61229329 0.9540617  2.149111 1.387341          0.5680226 #> 3695_Fgf5_4     2.68143918 6.3160307 10.000000 1.387341          7.2356519 #> 4228_Nlrp9c_413 0.84718098 0.9540617  2.370734 5.132278          3.4941350 #> 432_Ptprk_786   0.07383385 1.0416816  2.422208 2.062427          0.8716757 #>                 spatial_ratio     TT       CT        GT       AT       TC #> 5289_Ctps2_58        8.701846 3.7500 3.863636  4.827586 5.714286 3.783784 #> 1627_Lmo7_1306       6.416438 3.1250 5.000000  5.172414 4.285714 4.594595 #> 2390_Myo5b_32        5.030319 4.6875 5.681818  5.862069 4.285714 3.513514 #> 3695_Fgf5_4          6.429673 3.7500 6.136364  3.793103 7.500000 6.216216 #> 4228_Nlrp9c_413      8.757560 3.1250 4.318182 10.000000 3.928571 3.783784 #> 432_Ptprk_786        7.862827 3.4375 3.181818  3.448276 3.571429 2.162162 #>                       CC       GC       AC        TG        CG       GG #> 5289_Ctps2_58   4.358974 2.448980 6.551724  4.210526 0.7317073 4.615385 #> 1627_Lmo7_1306  3.076923 3.877551 4.827586  5.789474 2.4390244 4.871795 #> 2390_Myo5b_32   4.102564 4.489796 5.172414  7.631579 0.4878049 4.871795 #> 3695_Fgf5_4     5.641026 5.918367 3.448276  7.368421 3.1707317 4.102564 #> 4228_Nlrp9c_413 4.358974 3.469388 3.448276 10.000000 0.9756098 4.102564 #> 432_Ptprk_786   2.307692 6.326531 5.517241  4.210526 0.0000000 2.051282 #>                       AG       TA        CA       GA      AA #> 5289_Ctps2_58   6.888889 6.666667  6.578947 6.216216  7.1875 #> 1627_Lmo7_1306  7.333333 3.703704  5.000000 8.378378  5.9375 #> 2390_Myo5b_32   6.444444 4.444444  6.315789 5.405405  4.3750 #> 3695_Fgf5_4     3.111111 2.962963  6.052632 3.783784  2.1875 #> 4228_Nlrp9c_413 4.888889 3.703704  4.736842 4.324324  1.8750 #> 432_Ptprk_786   8.444444 3.703704 10.000000 3.513514 10.0000 print(paste(\"Number of peaks:\", nrow(additional_features))) #> [1] \"Number of peaks: 5000\" print(paste(\"Number of features:\", ncol(additional_features))) #> [1] \"Number of features: 22\""},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"computing-motif-energies","dir":"Articles","previous_headings":"","what":"Computing Motif Energies","title":"IceQream","text":"first step IceQream pipeline compute motif energies transcription factor model peak. process can computationally intensive, calculates energies 20,000 motifs various databases. However, tutorial, ’re using pre-computed motif energies sample 5000 loci, included example data: pre-computed matrix contains motif energies sample peaks, allowing us proceed analysis quickly. less memory computationally intensive analysis data, can reduce number motifs used regression taking representative SCENIC clusters (1615) instead motifs (20,000+). can done :","code":"motif_energies <- compute_motif_energies(peak_intervals, motif_db, normalization_intervals = normalization_intervals) motif_energies <- readr::read_rds(\"gastrulation-example/motif_energies.rds\") print(paste(\"Motif energy matrix dimensions:\", paste(dim(motif_energies), collapse = \" x \"))) #> [1] \"Motif energy matrix dimensions: 5000 x 21862\" motif_energies <- compute_motif_energies(peak_intervals, motif_db_scenic_clusters, normalization_intervals = normalization_intervals)"},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"running-iceqream","dir":"Articles","previous_headings":"","what":"Running IceQream","title":"IceQream","text":"Now ’re ready run IceQream regression: Let’s examine output: TrajectoryModel object contains components regression model, motif models, predicted accessibility scores.","code":"traj_model <- iq_regression(     peak_intervals = peak_intervals,     atac_scores = atac_scores,     motif_energies = motif_energies,     normalize_energies = FALSE,     additional_features = additional_features,     norm_intervals = normalization_intervals,     seed = 60427,     n_prego_motifs = 0, # increase to include de-novo motifs     frac_train = 0.8,     max_motif_num = 30     # include_interactions = TRUE # uncomment to include pairwise interactions ) #> → Computing sequence features #> → Added the following sequence features: \"gc_content\" #> ℹ Seed: 60427 #> ℹ Training on 4000 intervals (80%) and testing on 1000 intervals (20%) #> → Regressing on train set #> Warning in regress_trajectory_motifs(peak_intervals = #> peak_intervals[train_idxs, : NA values in additional features are #> replaced with 0 #> ℹ Number of peaks: 4000 #> → Extracting sequences... #> ℹ Calculating correlations between 21862 motif energies and ATAC difference... #> ℹ Selected 3953 (out of 21862) features with absolute correlation >= 0.05 #> ℹ Running first round of regression, # of features: 3953 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning: glmnet.fit: algorithm did not converge #> ℹ Taking 3507 features with beta >= 0.003 #> ℹ Running second round of regression... #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> ℹ Clustering 3481 features into 30 clusters... #> ℹ Choosing top 30 features clusters #> ℹ Features left: 3481 #> ℹ Learning a model for each motif cluster... #> ℹ Infering energies... #> ℹ Running final regression, number of features: 212 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> ✔ Finished running model. Number of non-zero coefficients: 211 (out of 212). R^2: 0.504542585994142 #> Warning in infer_trajectory_motifs(traj_model, peak_intervals[test_idxs, : #> NA values in additional features are replaced with 0 #> ℹ Extracting sequences... #> ℹ Computing motif energies for 1000 intervals and 129963 normalization intervals #> ℹ Inferring the model on 1000 intervals #>  #> Number of motifs: 30 #> R^2 train: 0.505 #> R^2 test: 0.431 #>  #> → Filtering the model #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> ℹ Using 400 samples for filtering #> ℹ R^2 of the full model: 0.26471276009439 #> ℹ Filtering features with R^2 < 5e-04 and bits < 1.75 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.neph__UW.Motif.0639 (----CCAGATGGC--): 0.0053114662552623. Bits: 8.75317222394556 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.kznf__ZNF18_Imbeault2017_OM_RCADE (-----TTCACA----): -0.00609024711598499. Bits: 4.18059267354316 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.homer__CYHATAAAAN_Hoxa13 (--TAAACAAT-----): -0.00755734992889961. Bits: 7.5120405108336 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.taipale_cyt_meth__POU2F2_NTMATTATGCAN_eDBD (AGAACGTATAAC-G-): -0.00477077746767879. Bits: 11.2679045953488 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by JASPAR.GATA2 (------GATA-----): 0.0649994763981358. Bits: 5.54057132789097 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by JASPAR.TBX1 (----A-GTGT-A---): 0.0349019487090572. Bits: 6.19088779594984 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.neph__UW.Motif.0188 (-----TTAGCAT-A-): 0.0125507420122338. Bits: 4.60903694894758 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.taipale__PITX1_DBD_NYTAATCCN_repr (------G-TTA----): -0.000229831888005683. Bits: 2.43085755936834 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.neph__UW.Motif.0048 (---GCAGCTGA----): 0.0115380360517521. Bits: 10.9552580058168 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by JASPAR.TREE1 (---AAT--AATTA--): 0.00890760150668563. Bits: 6.8232229178626 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.taipale_cyt_meth__BHLHE23_ANCATATGNT_FL_meth (-----CAG-TG----): 0.0308563362913034. Bits: 3.52185013914139 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.cisbp__M01881 (------A--------): -0.0051392040329214. Bits: 0.982104266776725 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.cisbp__M01739 (-----ACG-G-----): -0.0023785973444807. Bits: 1.69777930799667 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.cisbp__M00066 (---AGGAGCT-----): 0.000750668141963784. Bits: 8.49950791809433 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.kznf__CTCF_ENCODE.57_ChIP-seq (----ATATAAAT---): -0.00356426248534908. Bits: 6.89524344652503 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.swissregulon__hs__ESR2 (---GA-GTGA-----): 0.00993127937489308. Bits: 3.63134155570285 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.transfac_public__M00410 (----ACAATA-----): 0.018705854274112. Bits: 6.53478029315037 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.cisbp__M00002 (----CCACAT-----): -0.00321088183338142. Bits: 4.34496513502578 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.taipale_cyt_meth__LHX4_NTAATTAN_FL_repr (---CAATTA------): 0.00703918510075618. Bits: 3.6098580621109 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.cisbp__M01529 (------CAC-C----): -0.000990912243812925. Bits: 2.82911658703759 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.hocomoco__ZBT18_HUMAN.H11MO.0.C (---GCAGCTGGG---): 0.00377658271386416. Bits: 12.1202327607881 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by HOCOMOCO.NF2L1_MOUSE.H11MO.0.C (---GTGA-G------): 0.00383742709239399. Bits: 2.95109101802874 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.predrem__nrMotif2250 (-----ACGTCA----): 0.00427600708915621. Bits: 3.22082429964159 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.cisbp__M00006 (-----CAGGTA----): 0.00408747150173144. Bits: 7.89670582132685 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by JOLMA.MESP1_di_DBD (-----A-CAGGTG--): 0.0120032264645258. Bits: 5.77623064152554 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.predrem__nrMotif1099 (----TG-GAAC----): -0.00269704238353569. Bits: 3.03185523955961 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.predrem__nrMotif1859 (----A-GTGC-----): -0.00216658726730673. Bits: 2.45546591878619 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.taipale_cyt_meth__ISL2_SCACTTAN_eDBD (---TCAAAT------): -0.00757289862138033. Bits: 3.79337988175124 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.cisbp__M02099 (-----TAATCAG---): 0.00312152015653916. Bits: 7.72754426020812 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → R^2 added by SCENIC.scertf__morozov.MGA1 (-----ATCAAAG---): 0.014784902490846. Bits: 6.16790935062072 #> ℹ Removing the following features with bits < 1.75: \"SCENIC.cisbp__M01881\" and \"SCENIC.cisbp__M01739\" #> ℹ Trying to remove the following features with R^2 < 5e-04: \"SCENIC.kznf__ZNF18_Imbeault2017_OM_RCADE\", \"SCENIC.homer__CYHATAAAAN_Hoxa13\", \"SCENIC.taipale_cyt_meth__POU2F2_NTMATTATGCAN_eDBD\", \"SCENIC.taipale__PITX1_DBD_NYTAATCCN_repr\", \"SCENIC.cisbp__M01881\", \"SCENIC.cisbp__M01739\", \"SCENIC.kznf__CTCF_ENCODE.57_ChIP-seq\", \"SCENIC.cisbp__M00002\", \"SCENIC.cisbp__M01529\", \"SCENIC.predrem__nrMotif1099\", \"SCENIC.predrem__nrMotif1859\", and \"SCENIC.taipale_cyt_meth__ISL2_SCACTTAN_eDBD\" #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning: glmnet.fit: algorithm did not converge #> → Removing \"SCENIC.homer__CYHATAAAAN_Hoxa13\" changed the R^2 by -0.00140863108016637 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → Removing \"SCENIC.kznf__ZNF18_Imbeault2017_OM_RCADE\" changed the R^2 by -0.0114790091067073 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → Removing \"SCENIC.taipale_cyt_meth__POU2F2_NTMATTATGCAN_eDBD\" changed the R^2 by -0.00481583011296888 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → Not removing \"SCENIC.kznf__CTCF_ENCODE.57_ChIP-seq\" (changed the R^2 by only 0.000858728358122618). #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → Removing \"SCENIC.cisbp__M00002\" changed the R^2 by -0.00587542016164483 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → Removing \"SCENIC.predrem__nrMotif1099\" changed the R^2 by -0.00359112644278642 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → Removing \"SCENIC.predrem__nrMotif1859\" changed the R^2 by -0.00129434665084743 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → Removing \"SCENIC.cisbp__M01529\" changed the R^2 by -0.0017851803050557 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> → Not removing \"SCENIC.taipale__PITX1_DBD_NYTAATCCN_repr\" (changed the R^2 by only 0.0032051656166816). #> ℹ Removed 2 features with bits < 1.75 #> ℹ Removed 8 features with R^2 < 5e-04 #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning in eval(family$initialize): glmnet.fit: algorithm did not converge #> ✔ After filtering: Number of non-zero coefficients: 170 (out of 172). R^2: 0.494160731764211. Number of models: 20 #> Warning in infer_trajectory_motifs(traj_model, peak_intervals[test_idxs, : #> NA values in additional features are replaced with 0 #> ℹ Extracting sequences... #> ℹ Computing motif energies for 1000 intervals and 129963 normalization intervals #> ℹ Inferring the model on 1000 intervals #>  #> Number of motifs: 20 #> R^2 train: 0.494 #> R^2 test: 0.426 #>  #> ✔ Finished IQ regression #>  #> Run `plot_traj_model_report(traj_model)` to visualize the model features #> Run `plot_prediction_scatter(traj_model)` to visualize the model predictions print(traj_model) #> <TrajectoryModel> with 20 motifs and 23 additional features #>  #> Slots include: #> • @model: A GLM model object. Number of non-zero coefficients: 170 #> • @motif_models: A named list of motif models. Each element contains PSSM and #> spatial model (20 models: \"SCENIC.neph__UW.Motif.0639\", \"JASPAR.GATA2\", #> \"JASPAR.TBX1\", \"SCENIC.neph__UW.Motif.0188\", #> \"SCENIC.taipale__PITX1_DBD_NYTAATCCN_repr\", \"SCENIC.neph__UW.Motif.0048\", #> \"JASPAR.TREE1\", \"SCENIC.taipale_cyt_meth__BHLHE23_ANCATATGNT_FL_meth\", #> \"SCENIC.cisbp__M00066\", \"SCENIC.kznf__CTCF_ENCODE.57_ChIP-seq\", #> \"SCENIC.swissregulon__hs__ESR2\", \"SCENIC.transfac_public__M00410\", #> \"SCENIC.taipale_cyt_meth__LHX4_NTAATTAN_FL_repr\", #> \"SCENIC.hocomoco__ZBT18_HUMAN.H11MO.0.C\", \"HOCOMOCO.NF2L1_MOUSE.H11MO.0.C\", #> \"SCENIC.predrem__nrMotif2250\", \"SCENIC.cisbp__M00006\", \"JOLMA.MESP1_di_DBD\", #> \"SCENIC.cisbp__M02099\", and \"SCENIC.scertf__morozov.MGA1\") #> • @additional_features: A data frame of additional features (23 features) #> • @coefs: A data frame of coefficients (43 elements) #> • @model_features: A matrix of the model features (logistic functions of the #> motif models energies, dimensions: 5000x172) #> • @normalized_energies: A matrix of normalized energies of the model features #> (dimensions: 5000x20) #> • @type: A vector the length of the number of peaks, indicating whether each #> peak is a training ('train') or a prediction peak ('test') #> • @diff_score: A numeric value representing the difference score the model was #> trained on (5000 elements) #> • @predicted_diff_score: A numeric value representing the predicted difference #> score #> • @initial_prego_models: A list of prego models used in the initial phase of #> the algorithm (0 models) #> • @peak_intervals: A data frame containing the peak intervals (5000 elements) #> • @normalization_intervals: A data frame containing the intervals used for #> energy normalization (129963 elements) #> • @features_r2: A numeric vector of the added R^2 values for each feature (20 #> elements) #> • @params: A list of parameters used for training (including: #> \"energy_norm_quantile\", \"norm_energy_max\", \"min_energy\", \"alpha\", \"lambda\", #> \"peaks_size\", \"spat_num_bins\", \"spat_bin_size\", \"distilled_features\", #> \"n_clust_factor\", \"include_interactions\", \"interaction_threshold\", #> \"symmetrize_spat\", \"seed\", \"stats\", \"features_bits\", \"r2_threshold\", and #> \"bits_threshold\") #>  #> R^2 train: 0.494 #> R^2 test: 0.426"},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"visualizing-results","dir":"Articles","previous_headings":"","what":"Visualizing Results","title":"IceQream","text":"Let’s start scatter plot observed vs. predicted accessibility changes:  plot shows well model predicts accessibility changes. Points closer diagonal line indicate better predictions. measure accuracy model using coefficient determination (R^2).","code":"plot_prediction_scatter(traj_model)"},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"model-report","dir":"Articles","previous_headings":"Visualizing Results","what":"Model report","title":"IceQream","text":"Next, let’s look model report, provides detailed information motifs contributions:","code":"plot_traj_model_report(traj_model, filename = \"model_report.pdf\") knitr::include_graphics(\"model_report.pdf\")"},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"interpreting-the-trajectory-model-report","dir":"Articles","previous_headings":"Visualizing Results","what":"Interpreting the trajectory model report","title":"IceQream","text":"model report provides several key pieces information (left right): Motif logos show inferred sequence preferences transcription factor model. Response curves show accessibility changes function binding energy TF. Barplots show coefficient non-linear term every motif model. Spatial model curves show parameters spatial model TF. R² values indicate predictive power TF adds model. Spatial curves show frequency TF binding site along peaks bottom 10% (blue) top 10% (red) differential accessibility (dAP) distribution. Boxplots show distribution ATAC differences (dAP, y-axis) bins binding energy (x-axis) TF.","code":""},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"renaming-the-motif-models","dir":"Articles","previous_headings":"","what":"Renaming the motif models","title":"IceQream","text":"can rename motif models informative names, either manually using rename_motif_models automatically using match_traj_model_motif_names:","code":"names_map <- match_traj_model_motif_names(traj_model) #> ℹ Matching motif names, note that this might take a while. #> → Matching SCENIC.neph__UW.Motif.0639 #> → Matched with \"HOMER.Atoh1\", PSSM correlation = 0.753213203757469 #> → Matching JASPAR.GATA2 #> → Matched with \"HOMER.GATA3_2\", PSSM correlation = 0.925460717193095 #> → Matching JASPAR.TBX1 #> → Matched with \"HOMER.Tbet\", PSSM correlation = 0.81366742234409 #> → Matching SCENIC.neph__UW.Motif.0188 #> → Matched with \"HOMER.Oct4\", PSSM correlation = 0.819132006659473 #> → Matching SCENIC.taipale__PITX1_DBD_NYTAATCCN_repr #> → Matched with \"HOMER.GSC\", PSSM correlation = 0.796165760752198 #> → Matching SCENIC.neph__UW.Motif.0048 #> → Matched with \"HOMER.Ptf1a\", PSSM correlation = 0.744259745311024 #> → Matching JASPAR.TREE1 #> → Matched with \"HOMER.CES_1\", PSSM correlation = 0.822638055016751 #> → Matching SCENIC.taipale_cyt_meth__BHLHE23_ANCATATGNT_FL_meth #> → Matched with \"HOMER.HLH_1\", PSSM correlation = 0.827300202414477 #> → Matching SCENIC.cisbp__M00066 #> → Matched with \"HOMER.PU_1\", PSSM correlation = 0.553375609592903 #> → Matching SCENIC.kznf__CTCF_ENCODE.57_ChIP-seq #> → Matched with \"HOMER.SeqBias_A\", PSSM correlation = 0.716960968207738 #> → Matching SCENIC.swissregulon__hs__ESR2 #> → Matched with \"HOMER.Tbx5\", PSSM correlation = 0.651863264990547 #> → Matching SCENIC.transfac_public__M00410 #> → Matched with \"HOMER.Oct2\", PSSM correlation = 0.616286342232992 #> → Matching SCENIC.taipale_cyt_meth__LHX4_NTAATTAN_FL_repr #> → Matched with \"HOMER.Lhx3\", PSSM correlation = 0.673309344193721 #> → Matching SCENIC.hocomoco__ZBT18_HUMAN.H11MO.0.C #> → Matched with \"HOMER.E2A\", PSSM correlation = 0.888876703642631 #> → Matching HOCOMOCO.NF2L1_MOUSE.H11MO.0.C #> → Matched with \"HOMER.JunD\", PSSM correlation = 0.756415207832166 #> → Matching SCENIC.predrem__nrMotif2250 #> → Matched with \"HOMER.CRE\", PSSM correlation = 0.674601477662212 #> → Matching SCENIC.cisbp__M00006 #> → Matched with \"HOMER.HIF2a\", PSSM correlation = 0.660655936327649 #> → Matching JOLMA.MESP1_di_DBD #> → Matched with \"HOMER.MyoG\", PSSM correlation = 0.697353340588001 #> → Matching SCENIC.cisbp__M02099 #> → Matched with \"HOMER.Lhx3\", PSSM correlation = 0.822173337449173 #> → Matching SCENIC.scertf__morozov.MGA1 #> → Matched with \"HOMER.Tcf4\", PSSM correlation = 0.836515311593604 names_map #>                      HOCOMOCO.NF2L1_MOUSE.H11MO.0.C  #>                                              \"JunD\"  #>                                        JASPAR.GATA2  #>                                           \"GATA3_2\"  #>                                         JASPAR.TBX1  #>                                              \"Tbet\"  #>                                        JASPAR.TREE1  #>                                             \"CES_1\"  #>                                  JOLMA.MESP1_di_DBD  #>                                              \"MyoG\"  #>                                SCENIC.cisbp__M00006  #>                                             \"HIF2a\"  #>                                SCENIC.cisbp__M00066  #>                                              \"PU_1\"  #>                                SCENIC.cisbp__M02099  #>                                              \"Lhx3\"  #>              SCENIC.hocomoco__ZBT18_HUMAN.H11MO.0.C  #>                                               \"E2A\"  #>                SCENIC.kznf__CTCF_ENCODE.57_ChIP-seq  #>                                         \"SeqBias_A\"  #>                          SCENIC.neph__UW.Motif.0048  #>                                             \"Ptf1a\"  #>                          SCENIC.neph__UW.Motif.0188  #>                                              \"Oct4\"  #>                          SCENIC.neph__UW.Motif.0639  #>                                             \"Atoh1\"  #>                         SCENIC.predrem__nrMotif2250  #>                                               \"CRE\"  #>                         SCENIC.scertf__morozov.MGA1  #>                                              \"Tcf4\"  #>                       SCENIC.swissregulon__hs__ESR2  #>                                              \"Tbx5\"  #>            SCENIC.taipale__PITX1_DBD_NYTAATCCN_repr  #>                                               \"GSC\"  #> SCENIC.taipale_cyt_meth__BHLHE23_ANCATATGNT_FL_meth  #>                                             \"HLH_1\"  #>      SCENIC.taipale_cyt_meth__LHX4_NTAATTAN_FL_repr  #>                                            \"Lhx3.2\"  #>                      SCENIC.transfac_public__M00410  #>                                              \"Oct2\" traj_model <- rename_motif_models(traj_model, names_map) #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning: glmnet.fit: algorithm did not converge"},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"exporting-the-model","dir":"Articles","previous_headings":"","what":"Exporting the model","title":"IceQream","text":"can export minimal model representation list PBM order use infer parameters new data: can now use pbm_list.compute pbm_list.gextract:","code":"pbm_list <- traj_model_to_pbm_list(traj_model) #> ℹ Computing motif energies for 20 motifs on 129963 normalization intervals pbm_list #> $Atoh1 #> a <PBM> object named \"Atoh1\" with 15 positions (`@pssm`) #> Energy normalization max = -16.7697998926721 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $GATA3_2 #> a <PBM> object named \"GATA3_2\" with 15 positions (`@pssm`) #> Energy normalization max = -20.5917524566006 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $Tbet #> a <PBM> object named \"Tbet\" with 15 positions (`@pssm`) #> Energy normalization max = -18.4175684223111 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $Oct4 #> a <PBM> object named \"Oct4\" with 15 positions (`@pssm`) #> Energy normalization max = -20.1783680776808 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $GSC #> a <PBM> object named \"GSC\" with 15 positions (`@pssm`) #> Energy normalization max = -23.0454344399052 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $Ptf1a #> a <PBM> object named \"Ptf1a\" with 15 positions (`@pssm`) #> Energy normalization max = -17.1134625049322 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $CES_1 #> a <PBM> object named \"CES_1\" with 15 positions (`@pssm`) #> Energy normalization max = -18.6210321534491 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $HLH_1 #> a <PBM> object named \"HLH_1\" with 15 positions (`@pssm`) #> Energy normalization max = -21.1860887255911 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $PU_1 #> a <PBM> object named \"PU_1\" with 15 positions (`@pssm`) #> Energy normalization max = -17.6019069919947 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $SeqBias_A #> a <PBM> object named \"SeqBias_A\" with 15 positions (`@pssm`) #> Energy normalization max = -18.7501484725496 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $Tbx5 #> a <PBM> object named \"Tbx5\" with 15 positions (`@pssm`) #> Energy normalization max = -20.8831433498881 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $Oct2 #> a <PBM> object named \"Oct2\" with 15 positions (`@pssm`) #> Energy normalization max = -19.3040495565304 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $Lhx3.2 #> a <PBM> object named \"Lhx3.2\" with 15 positions (`@pssm`) #> Energy normalization max = -21.4654422091794 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $E2A #> a <PBM> object named \"E2A\" with 15 positions (`@pssm`) #> Energy normalization max = -15.0207500920094 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $JunD #> a <PBM> object named \"JunD\" with 15 positions (`@pssm`) #> Energy normalization max = -21.4395567564327 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $CRE #> a <PBM> object named \"CRE\" with 15 positions (`@pssm`) #> Energy normalization max = -21.6343566895508 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $HIF2a #> a <PBM> object named \"HIF2a\" with 15 positions (`@pssm`) #> Energy normalization max = -19.6442119778802 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $MyoG #> a <PBM> object named \"MyoG\" with 15 positions (`@pssm`) #> Energy normalization max = -19.962137730404 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $Lhx3 #> a <PBM> object named \"Lhx3\" with 15 positions (`@pssm`) #> Energy normalization max = -20.0711334552148 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) #>  #> $Tcf4 #> a <PBM> object named \"Tcf4\" with 15 positions (`@pssm`) #> Energy normalization max = -20.3450770525375 (`@max_energy`) #> Spatial distribution with 11 spatial factors, from position 30 to 470 (440 bp) #> (`@spat`) #> Includes a model with 4 coefficients (\"high-energy\", \"higher-energy\", #> \"low-energy\", and \"sigmoid\") (`@coefs`) new_intervals <- data.frame(     chrom = rep(\"chr1\", 3),     start = c(3671720, 4412460, 4493400),     end = c(3672020, 4412760, 4493700) ) pbm_list.gextract(pbm_list, new_intervals) #> ℹ Computing energies for 20 PBMs on 3 sequences #>   chrom   start     end    Atoh1  GATA3_2 Tbet      Oct4       GSC    Ptf1a #> 1  chr1 3671720 3672020 1.138019 2.985584    0 0.0000000 0.3652249 0.144773 #> 2  chr1 4412460 4412760 0.000000 2.291510    0 2.3218827 1.7040236 0.000000 #> 3  chr1 4493400 4493700 0.000000 2.848635    0 0.5532524 3.4460627 0.000000 #>      CES_1    HLH_1     PU_1 SeqBias_A      Tbx5 Oct2   Lhx3.2 E2A      JunD #> 1 3.512197 1.737831 0.000000         0 1.0298639    0 3.476509   0 0.5635875 #> 2 0.000000 2.650077 4.233011         0 1.5417980    0 3.918567   0 0.0000000 #> 3 0.000000 2.321180 0.000000         0 0.8919606    0 3.872607   0 0.6992075 #>         CRE     HIF2a       MyoG     Lhx3     Tcf4 #> 1 1.7249713 0.0000000 0.53260273 2.811548 0.000000 #> 2 0.8443201 0.4237131 0.78995953 0.000000 4.855682 #> 3 0.3815708 0.0000000 0.06024992 1.404844 0.000000 # directly compute on sequences seqs <- prego::intervals_to_seq(new_intervals) seqs #> [1] \"TTCCTCTCCTCCCCTCGCGCGCGCTCCCTCCTCCCGCAGCCTCTCCTCCACCAGCTGACTCCGAGGGAGAGGATGACCTCATCCCTTCCCTTCCAGCTGCCGCCGCTCCCACCCCGGCTGGGGAGGGGCGAGAAGGAGGGCCCGGAGGAGGGGCTGGGATTGAGGGGAGCGGCGGGTGGGGGTGCCTGGCTGGCCAGTGCTGGACGCGGAGGGCAACAGCACGGCAATCGGAGGCCCAGTCCAGGCTCGTGGGATAGCGAAGAGCGTTGAGTGGATTTCCTCGAAGCTGGGGGGATGGGA\" #> [2] \"ATCTCTGGAAAGACTTGTGCTGATCTCTCTCTGCCCCTTCCTTGATTCACATCTCAAGGGACCGAGAAGGGAGGGAAAACACCAGTCCAGTATTTCCTATCAGTTCAGCGGGGCAGGAACCGGGAGCTTTTCCACAGGGCTGAGCCTGGCCCTCCACTGAGCAGTGTCTGCATTCCAAGGCTCCAGCCTGTCACCACCCTTCCAATCCCTTTGAAGCTGGGCAAAAGGCCTGCCAACAAGCACCAAACTTGAGAGCTCCTCTGCCAGCCCTGGGAGGGGCTGTTTCCTGCCTGCTTTTCG\" #> [3] \"GCTCATGGCTCTCCAGACCGACCCCGAGCTCTGCTATGGCCACGGGACACGCCGCTTCCCCCGACCCTGAGGCAGGGATCGGAAGCTAGCCTGGAGATGCCCAGAGGAACTCGTAAAGCTGAGCGGGTGCTACCCTCCCGCTGCTCTCCTGGTAGACCTAACCCTTCGCCTAATCCGCGCTGGAGATCTACCCAGTGACACTGCGGGTGTCCCCCCGGGCCGCGGGGCCCTTTTCTTTATGGACGCGGCCAATGGCGAGGCGGGGGCGGACCGGACCCTAGTCCTTAGGCCCCCGCCCAG\" pbm_list.compute(pbm_list, seqs) #> ℹ Computing energies for 20 PBMs on 3 sequences #>         Atoh1  GATA3_2 Tbet      Oct4       GSC    Ptf1a    CES_1    HLH_1 #> [1,] 1.138019 2.985584    0 0.0000000 0.3652249 0.144773 3.512197 1.737831 #> [2,] 0.000000 2.291510    0 2.3218827 1.7040236 0.000000 0.000000 2.650077 #> [3,] 0.000000 2.848635    0 0.5532524 3.4460627 0.000000 0.000000 2.321180 #>          PU_1 SeqBias_A      Tbx5 Oct2   Lhx3.2 E2A      JunD       CRE #> [1,] 0.000000         0 1.0298639    0 3.476509   0 0.5635875 1.7249713 #> [2,] 4.233011         0 1.5417980    0 3.918567   0 0.0000000 0.8443201 #> [3,] 0.000000         0 0.8919606    0 3.872607   0 0.6992075 0.3815708 #>          HIF2a       MyoG     Lhx3     Tcf4 #> [1,] 0.0000000 0.53260273 2.811548 0.000000 #> [2,] 0.4237131 0.78995953 0.000000 4.855682 #> [3,] 0.0000000 0.06024992 1.404844 0.000000"},{"path":"https://tanaylab.github.io/iceqream/articles/iceqream.html","id":"running-iceqream-on-your-own-data","dir":"Articles","previous_headings":"","what":"Running IceQream on your own data","title":"IceQream","text":"run IceQream data, need provide following inputs: Genomic positions peaks (dataframe columns chrom, start, end, peak_name), optionally can const column indicating constitutive loci. ATAC scores (matrix rows corresponding peaks columns corresponding bins). (Optional) Additional features (data frame rows corresponding peaks columns corresponding features). can follow steps outlined vignette compute motif energies, run regression analyze results.","code":""},{"path":"https://tanaylab.github.io/iceqream/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer. Akhiad Bercovich. Author. Amos Tanay. Author.","code":""},{"path":"https://tanaylab.github.io/iceqream/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz , Bercovich , Tanay (2025). iceqream: Interpretable Computational Engine Quantitative Regression Enhancer ATAC Motifs. R package version 0.0.2, https://tanaylab.github.io/iceqream/.","code":"@Manual{,   title = {iceqream: Interpretable Computational Engine for Quantitative Regression of Enhancer ATAC Motifs},   author = {Aviezer Lifshitz and Akhiad Bercovich and Amos Tanay},   year = {2025},   note = {R package version 0.0.2},   url = {https://tanaylab.github.io/iceqream/}, }"},{"path":"https://tanaylab.github.io/iceqream/index.html","id":"iceqream-","dir":"","previous_headings":"","what":"Interpretable Computational Engine for Quantitative Regression of Enhancer ATAC Motifs","title":"Interpretable Computational Engine for Quantitative Regression of Enhancer ATAC Motifs","text":"iceqream (Interpretable Computational Engine Quantitative Regression Enhancer ATAC Motifs, short: IQ) package regressing accessibility sequences using physical models TF binding. models TF effective concentrations latent variables activate repress regulatory elements nonlinear fashion, possible contribution pairwise interactions synergistic chromosomal domain effects. IQ allows inference synthesis models explaining accessibility dynamics entire single cell manifold.","code":""},{"path":"https://tanaylab.github.io/iceqream/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interpretable Computational Engine for Quantitative Regression of Enhancer ATAC Motifs","text":"can install development version iceqream like :","code":"remotes::install_github(\"tanaylab/iceqream\")"},{"path":"https://tanaylab.github.io/iceqream/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Interpretable Computational Engine for Quantitative Regression of Enhancer ATAC Motifs","text":"See vignette detailed example mouse gastrulation trajectory.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeature-class.html","id":null,"dir":"Reference","previous_headings":"","what":"IQFeature class — IQFeature-class","title":"IQFeature class — IQFeature-class","text":"class represents IQ feature method defines IQFeature object displayed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeature-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IQFeature class — IQFeature-class","text":"","code":"# S4 method for class 'IQFeature' show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeature-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IQFeature class — IQFeature-class","text":"object IQFeature object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeature-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"IQFeature class — IQFeature-class","text":"name name IQ feature (character). coefs coefficients IQ feature (numeric).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeatureGroup-class.html","id":null,"dir":"Reference","previous_headings":"","what":"IQFeatureGroup class — IQFeatureGroup-class","title":"IQFeatureGroup class — IQFeatureGroup-class","text":"class represents group related IQ features, dinucleotide features. method defines IQFeatureGroup object displayed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeatureGroup-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IQFeatureGroup class — IQFeatureGroup-class","text":"","code":"# S4 method for class 'IQFeatureGroup' initialize(.Object, features, compute_func, size)  # S4 method for class 'IQFeatureGroup' show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeatureGroup-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IQFeatureGroup class — IQFeatureGroup-class","text":".Object IQFeatureGroup object initialize. features list IQSeqFeature objects. compute_func function compute features group . size size sequences use feature computation. object IQFeatureGroup object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeatureGroup-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IQFeatureGroup class — IQFeatureGroup-class","text":"initialized IQFeatureGroup object.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQFeatureGroup-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"IQFeatureGroup class — IQFeatureGroup-class","text":"features list IQSeqFeature objects. compute_func function compute features group . size size sequences use feature computation (numeric).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQSeqFeature-class.html","id":null,"dir":"Reference","previous_headings":"","what":"IQSeqFeature class — IQSeqFeature-class","title":"IQSeqFeature class — IQSeqFeature-class","text":"class represents sequence feature IQ models, inheriting IQFeature. method defines IQSeqFeature object displayed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQSeqFeature-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IQSeqFeature class — IQSeqFeature-class","text":"","code":"# S4 method for class 'IQSeqFeature' show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/IQSeqFeature-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IQSeqFeature class — IQSeqFeature-class","text":"object IQSeqFeature object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQSeqFeature-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"IQSeqFeature class — IQSeqFeature-class","text":"name name IQ sequence feature (character). coefs coefficients IQ sequence feature (numeric). compute_func function compute feature (function). min_value minimum value normalization (numeric). max_value maximum value normalization (numeric). quantile quantile use normalization (numeric). size size sequences use feature computation (numeric).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQmodel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"IQmodel class — IQmodel-class","title":"IQmodel class — IQmodel-class","text":"class represents IQ model including IQ features PBMs, along necessary model parameters. method defines IQmodel object displayed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQmodel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IQmodel class — IQmodel-class","text":"","code":"# S4 method for class 'IQmodel' show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/IQmodel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IQmodel class — IQmodel-class","text":"object IQmodel object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/IQmodel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"IQmodel class — IQmodel-class","text":"iq_features list IQFeature objects. pbms list PBM objects. intercept intercept term model. func function used computing energies (e.g., \"logSumExp\" \"max\"). lambda regularization parameter. alpha elastic net mixing parameter. min_pred Minimum value training predictions normalization. max_pred Maximum value training predictions normalization. norm_factors Normalization factors scaling predictions.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/PBM-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PBM Class — PBM-class","title":"PBM Class — PBM-class","text":"class represents PBM (Physical Binding Model) object. inherits IQFeature class.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/PBM-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PBM Class — PBM-class","text":"","code":"# S4 method for class 'PBM' show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/PBM-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PBM Class — PBM-class","text":"object instance PBM.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/PBM-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"PBM Class — PBM-class","text":"pssm matrix representing position-specific scoring matrix. max_energy numeric value representing maximum energy value normalization min_energy numeric value representing minimal energy value normalization energy_range numeric value representing energy range value normalization spat data frame representing spatial distribution (optional) spat_min numeric value representing spatial minimum (optional). spat_max numeric value representing spatial maximum (optional) seq_length numeric value representing length sequence spatial distribution (optional)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/TrajectoryModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"TrajectoryModel Class — TrajectoryModel-class","title":"TrajectoryModel Class — TrajectoryModel-class","text":"S4 class represent trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/TrajectoryModel-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TrajectoryModel Class — TrajectoryModel-class","text":"","code":"# S4 method for class 'TrajectoryModel' show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/TrajectoryModel-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrajectoryModel Class — TrajectoryModel-class","text":"object instance TrajectoryModel.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/TrajectoryModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"TrajectoryModel Class — TrajectoryModel-class","text":"diff_score numeric numerical value representing difference score. predicted_diff_score numeric numerical value representing predicted difference score. model model object data type represents trajectory model. coefs data.frame data frame containing coefficients model (including intercept). Contains coefficients 'early', 'linear' 'late' models model_features matrix containing features used training model. normalized_energies matrix matrix containing normalized energies. additional variables used, also included. type vector length number peaks, indicating whether peak training ('train') prediction peak ('test'). motif_models list list models representing different motifs. initial_prego_models list list initial pre-go models. peak_intervals data.frame data frame containing peak intervals. params list list parameters used training. additional_features data.frame data frame containing additional features. features_r2 numeric numeric vector R^2 values feature. normalization_intervals data.frame data frame containing intervals used energy normalization. interactions matrix matrix interaction features.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/TrajectoryModelMulti-class.html","id":null,"dir":"Reference","previous_headings":"","what":"TrajectoryModelMulti Class — TrajectoryModelMulti-class","title":"TrajectoryModelMulti Class — TrajectoryModelMulti-class","text":"class represents multi-trajectory model, collection individual trajectory models.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/TrajectoryModelMulti-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TrajectoryModelMulti Class — TrajectoryModelMulti-class","text":"","code":"# S4 method for class 'TrajectoryModelMulti' show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/TrajectoryModelMulti-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrajectoryModelMulti Class — TrajectoryModelMulti-class","text":"object instance TrajectoryModelMulti.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/TrajectoryModelMulti-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"TrajectoryModelMulti Class — TrajectoryModelMulti-class","text":"models list individual trajectory models. models_full list individual trajectory models full features. motif_models list motif models corresponding individual trajectory models. cluster_map data frame maps original motif distilled cluster. stats data frame r2 statistics trajectory model distillation. params additional parameters multi-trajectory distillation.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_features_r2.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Features R^2 — add_features_r2","title":"Add Features R^2 — add_features_r2","text":"function adds added R-squared values motif model trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_features_r2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Features R^2 — add_features_r2","text":"","code":"add_features_r2(   traj_model,   sample_frac = 0.1,   additional = FALSE,   seed = 60427 )"},{"path":"https://tanaylab.github.io/iceqream/reference/add_features_r2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Features R^2 — add_features_r2","text":"traj_model trajectory model object. sample_frac fraction samples use computing r2 without model. NULL, samples used. additional calculate also additional features. Default FALSE. seed seed use sampling data. Default 60427.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_features_r2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Features R^2 — add_features_r2","text":"trajectory model object added R-squared values.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add interactions to a trajectory model — add_interactions","title":"Add interactions to a trajectory model — add_interactions","text":"function adds significant interactions given trajectory model already exist. identifies significant interactions based provided threshold updates model features logistic features derived interactions. trajectory model re-learned new features.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add interactions to a trajectory model — add_interactions","text":"","code":"add_interactions(   traj_model,   interaction_threshold = 0.001,   max_motif_n = NULL,   max_add_n = NULL,   max_n = NULL,   lambda = 0.00001,   alpha = 1,   seed = 60427,   interactions = NULL,   ignore_feats = c(\"TT\", \"CT\", \"GT\", \"AT\", \"TC\", \"CC\", \"GC\", \"AC\", \"TG\", \"CG\", \"GG\",     \"AG\", \"TA\", \"CA\", \"GA\", \"AA\") )"},{"path":"https://tanaylab.github.io/iceqream/reference/add_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add interactions to a trajectory model — add_interactions","text":"interaction_threshold threshold selecting features create interactions. IQ learns linear model features selects features coefficients threshold. Default: 0.001 max_motif_n maximum number motifs consider interactions. NULL, motifs interaction_threshold considered. Default: NULL max_add_n maximum number additional features consider interactions. NULL, additional features interaction_threshold considered. Default: NULL max_n maximum number interactions consider. NULL, interactions considered. set, interactions selected based correlation signal training data. Default: NULL seed random seed reproducibility. interactions precomputed interaction matrix. provided, function compute interactions. Default: NULL ignore_feats character vector features ignore creating interactions. Default: dinucleotides","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add interactions to a trajectory model — add_interactions","text":"updated trajectory model added interactions.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_motif_models_to_traj.html","id":null,"dir":"Reference","previous_headings":"","what":"Add motif models to trajectory model — add_motif_models_to_traj","title":"Add motif models to trajectory model — add_motif_models_to_traj","text":"function adds specified motif models given trajectory model. updates model, motif models, predicted difference score, model features, coefficients, normalized energies, features R^2 trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_motif_models_to_traj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add motif models to trajectory model — add_motif_models_to_traj","text":"","code":"add_motif_models_to_traj(traj_model, new_motif_models, verbose = TRUE)"},{"path":"https://tanaylab.github.io/iceqream/reference/add_motif_models_to_traj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add motif models to trajectory model — add_motif_models_to_traj","text":"traj_model trajectory model object add motif models . new_motif_models named list motif models add. element contain 'pssm' component optionally 'spat' component. verbose logical value indicating whether display information R^2 adding motif models. Default TRUE.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/add_motif_models_to_traj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add motif models to trajectory model — add_motif_models_to_traj","text":"updated trajectory model object adding motif models.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_motif_directional_hits.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute motif directional hits — compute_motif_directional_hits","title":"Compute motif directional hits — compute_motif_directional_hits","text":"function computes number hits given motif set intervals, separated strand direction.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_motif_directional_hits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute motif directional hits — compute_motif_directional_hits","text":"","code":"compute_motif_directional_hits(pssm, intervals, size, pwm_threshold = 7)"},{"path":"https://tanaylab.github.io/iceqream/reference/compute_motif_directional_hits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute motif directional hits — compute_motif_directional_hits","text":"pssm position-specific scoring matrix (PSSM) object. intervals data frame containing genomic intervals search motif hits. size size intervals. pwm_threshold threshold PSSM score consider hit.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_motif_directional_hits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute motif directional hits — compute_motif_directional_hits","text":"data frame containing number hits motif interval, separated strand direction. Column names 'ml' (minus, left), 'mr' (minus, right), 'pl' (plus, left), 'pr' (plus, right).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_motif_energies.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Motif Energies — compute_motif_energies","title":"Compute Motif Energies — compute_motif_energies","text":"function computes motif energies given peak intervals using specified motif database. Optionally, can normalize computed motif energies using additional normalization intervals.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_motif_energies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Motif Energies — compute_motif_energies","text":"","code":"compute_motif_energies(   peak_intervals,   db = iceqream::motif_db,   normalization_intervals = peak_intervals,   prior = 0.01,   normalize = TRUE,   energy_norm_quantile = 1,   norm_energy_max = 10,   min_energy = -7,   db_quantiles = NULL )"},{"path":"https://tanaylab.github.io/iceqream/reference/compute_motif_energies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Motif Energies — compute_motif_energies","text":"peak_intervals data frame containing peak intervals columns: chrom, start, end. additional column 'peak_name' present, used row names output matrix. db motif database use extracting motif energies. Default iceqream::motif_db. normalization_intervals data frame containing intervals normalization. Default peak_intervals. prior prior probability nucleotide. normalize logical value indicating whether normalize motif energies. Default TRUE. energy_norm_quantile numeric value quantile used normalization. Default 1. norm_energy_max maximum value normalized energy values scaled. Default 10. min_energy minimum energy value assigned normalization. Default -7. db_quantiles matrix motif energies quantiles use normalization. Rows motifs columns quantiles. NULL, used instead computing quantiles normalization intervals. precomputed matrix mouse gastrulation can found iceqream::mouse_db_quantiles.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_motif_energies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Motif Energies — compute_motif_energies","text":"matrix motif energies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_tracks_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute tracks quantiles — compute_tracks_q","title":"Compute tracks quantiles — compute_tracks_q","text":"function computes quantiles set ATAC-seq tracks.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_tracks_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute tracks quantiles — compute_tracks_q","text":"","code":"compute_tracks_q(   atac_names,   atac_tracks,   iterator = 20,   norm_q = 0.995,   norm_intervals = gintervals.all(),   tn5bias_track = \"tn5bias\",   normalize_tn5bias = TRUE,   sample_n = 10000 )"},{"path":"https://tanaylab.github.io/iceqream/reference/compute_tracks_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute tracks quantiles — compute_tracks_q","text":"atac_names character vector specifying names ATAC-seq tracks. atac_tracks list numeric vectors representing ATAC-seq tracks. iterator iterator object used computing quantiles. norm_q numeric vector specifying quantiles compute track. single value, quantile used tracks. norm_intervals numeric vector specifying intervals computing quantiles. tn5bias_track numeric vector representing TN5 bias track. normalize_tn5bias Logical, whether normalize TN5 bias track. sample_n numeric value specifying maximum number data points use computing quantiles.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_tracks_q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute tracks quantiles — compute_tracks_q","text":"data frame columns \"type\" \"q\", \"type\" represents name ATAC-seq track \"q\" represents computed quantiles.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_traj_model_spatial_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute spatial frequency of motifs in trajectory model — compute_traj_model_spatial_freq","title":"Compute spatial frequency of motifs in trajectory model — compute_traj_model_spatial_freq","text":"function computes spatial frequency motifs trajectory model, using top bottom 10% peaks based diff_score.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_traj_model_spatial_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute spatial frequency of motifs in trajectory model — compute_traj_model_spatial_freq","text":"","code":"compute_traj_model_spatial_freq(   traj_model,   size,   pwm_threshold = 7,   pwm_q_threshold = 0.99,   top_q = 0.1,   bottom_q = 0.1,   atac_track = NULL,   parallel = TRUE,   bidirect_size = NULL,   k4me3_track = NULL,   k27me3_track = NULL,   k27ac_track = NULL,   orient_to_intervals = NULL,   align_to_max = TRUE,   motifs = names(traj_model@motif_models) )"},{"path":"https://tanaylab.github.io/iceqream/reference/compute_traj_model_spatial_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute spatial frequency of motifs in trajectory model — compute_traj_model_spatial_freq","text":"traj_model trajectory model object size size region compute spatial frequency pwm_threshold threshold PWM score pwm_q_threshold genomic quantile use PWM threshold. used pwm_threshold NULL. top_q proportion top peaks select bottom_q proportion bottom peaks select atac_track name ATAC-seq marginal track parallel Whether use parallel processing bidirect_size Size intervals use deciding directionality sequence k4me3_track name k4me3 track k27me3_track name k27me3 track k27ac_track name k27ac track orient_to_intervals data frame containing intervals orient sequences align_to_max logical indicating whether align sequences maximum sequence epigenetic tracks atac signal motifs vector motif names compute spatial frequency . Default motifs trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/compute_traj_model_spatial_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute spatial frequency of motifs in trajectory model — compute_traj_model_spatial_freq","text":"data frame spatial frequency motif","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_default_additional_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Default Additional Features — create_default_additional_features","title":"Create Default Additional Features — create_default_additional_features","text":"function generates additional features given set peaks. features include sequence features regional ATAC signal using punctured window.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_default_additional_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Default Additional Features — create_default_additional_features","text":"","code":"create_default_additional_features(   peaks,   tracks,   window_size = 20000,   normalize = TRUE,   norm_quant = 0.05,   spatial_ratio_ext = 1000 )"},{"path":"https://tanaylab.github.io/iceqream/reference/create_default_additional_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Default Additional Features — create_default_additional_features","text":"peaks Intervals set peaks tracks Tracks containing ATAC signal window_size integer specifying size window computing regional ATAC signal. Default 20,000 bp. normalize logical value indicating whether normalize features range 0-10. norm_quant quantile use normalization. Values quantile 1-quantile truncated, rest linearly scaled 0-10.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_default_additional_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Default Additional Features — create_default_additional_features","text":"data frame additional features: sequence features regional ATAC signal. features normalized range 0-10.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_dinuc_feature_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Dinucleotide Feature Group — create_dinuc_feature_group","title":"Create Dinucleotide Feature Group — create_dinuc_feature_group","text":"function creates IQFeatureGroup object dinucleotide features.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_dinuc_feature_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Dinucleotide Feature Group — create_dinuc_feature_group","text":"","code":"create_dinuc_feature_group(   traj_model,   quantile = 0.99,   size = traj_model@params$peaks_size,   dinucleotides = c(\"AA\", \"AC\", \"AG\", \"AT\", \"CA\", \"CC\", \"CG\", \"CT\", \"GA\", \"GC\", \"GG\",     \"GT\", \"TA\", \"TC\", \"TG\", \"TT\") )"},{"path":"https://tanaylab.github.io/iceqream/reference/create_dinuc_feature_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Dinucleotide Feature Group — create_dinuc_feature_group","text":"traj_model trajectory model object. quantile quantile use normalization (default 0.99). size size sequences use feature computation. dinucleotides vector dinucleotides create features (default possible dinucleotides).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_dinuc_feature_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Dinucleotide Feature Group — create_dinuc_feature_group","text":"IQFeatureGroup object containing dinucleotide features.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_dinuc_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Dinucleotide Features — create_dinuc_features","title":"Create Dinucleotide Features — create_dinuc_features","text":"function creates IQSeqFeature objects possible dinucleotides.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_dinuc_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Dinucleotide Features — create_dinuc_features","text":"","code":"create_dinuc_features(   traj_model,   quantile = 0.99,   size = traj_model@params$peaks_size,   dinucleotides = c(\"AA\", \"AC\", \"AG\", \"AT\", \"CA\", \"CC\", \"CG\", \"CT\", \"GA\", \"GC\", \"GG\",     \"GT\", \"TA\", \"TC\", \"TG\", \"TT\"),   feat_names = dinucleotides )"},{"path":"https://tanaylab.github.io/iceqream/reference/create_dinuc_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Dinucleotide Features — create_dinuc_features","text":"traj_model trajectory model object. quantile quantile use normalization (default 0.99). size size sequences use feature computation. dinucleotides vector dinucleotides create features (default possible dinucleotides). feat_names vector feature names use dinucleotide (default dinucleotide ).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_dinuc_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Dinucleotide Features — create_dinuc_features","text":"list IQSeqFeature objects, one dinucleotide.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_iq_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an IQmodel from a trajectory model — create_iq_model","title":"Create an IQmodel from a trajectory model — create_iq_model","text":"function creates IQmodel object trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_iq_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an IQmodel from a trajectory model — create_iq_model","text":"","code":"create_iq_model(traj_model, func = \"logSumExp\")"},{"path":"https://tanaylab.github.io/iceqream/reference/create_iq_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an IQmodel from a trajectory model — create_iq_model","text":"traj_model trajectory model object func function use computing energies (default \"logSumExp\")","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_iq_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an IQmodel from a trajectory model — create_iq_model","text":"IQmodel object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_iq_seq_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an IQSeqFeature from a trajectory model — create_iq_seq_feature","title":"Create an IQSeqFeature from a trajectory model — create_iq_seq_feature","text":"Create IQSeqFeature trajectory model","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_iq_seq_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an IQSeqFeature from a trajectory model — create_iq_seq_feature","text":"","code":"create_iq_seq_feature(traj_model, feature_name, compute_func, quantile = 0.99)"},{"path":"https://tanaylab.github.io/iceqream/reference/create_iq_seq_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an IQSeqFeature from a trajectory model — create_iq_seq_feature","text":"traj_model trajectory model object. feature_name name feature create. compute_func function compute feature. quantile quantile use normalization (default 0.99).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_iq_seq_feature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an IQSeqFeature from a trajectory model — create_iq_seq_feature","text":"IQSeqFeature object.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_logist_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Logistic Features — create_logist_features","title":"Create Logistic Features — create_logist_features","text":"function takes matrix dataframe features, removes columns entirely NA, applies three logistic transformations column. transformed set features appended suffixes \"_early\", \"_linear\", \"_late\" differentiate . resulting matrix combines transformed features.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_logist_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Logistic Features — create_logist_features","text":"","code":"create_logist_features(features)"},{"path":"https://tanaylab.github.io/iceqream/reference/create_logist_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Logistic Features — create_logist_features","text":"features matrix dataframe column feature transformed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_logist_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Logistic Features — create_logist_features","text":"matrix containing transformed features columns named according transformation applied (.e., \"_early\", \"_linear\", \"_late\").","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/create_logist_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Logistic Features — create_logist_features","text":"","code":"# Create a sample matrix sample_features <- matrix(rnorm(100), ncol = 5) transformed_features <- create_logist_features(sample_features) head(transformed_features) #>      V1_high-energy V1_higher-energy V1_low-energy   V1_sigmoid V2_high-energy #> [1,]    0.006669470     2.238974e-05  -0.336385193 0.0016587290    0.016886267 #> [2,]    0.015194518     1.172040e-04   0.063742721 0.0086228195    0.016027914 #> [3,]    0.003976017     7.935848e-06  -0.543645366 0.0005885478    0.006994522 #> [4,]    0.013348714     9.029132e-05  -0.001392821 0.0066559143    0.019299783 #> [5,]    0.018220130     1.690384e-04   0.154149501 0.0123893993    0.034055131 #> [6,]    0.023646487     2.862674e-04   0.279466150 0.0208039625    0.012753208 #>      V2_higher-energy V2_low-energy  V2_sigmoid V3_high-energy V3_higher-energy #> [1,]     1.450009e-04    0.11650712 0.010646236    0.013859432     9.738224e-05 #> [2,]     1.305223e-04    0.09048961 0.009593319    0.009742111     4.791892e-05 #> [3,]     2.463337e-05   -0.31504444 0.001824645    0.013057593     8.637080e-05 #> [4,]     1.898699e-04    0.18238058 0.013895138    0.011813424     7.060768e-05 #> [5,]     5.999598e-04    0.43991567 0.042635577    0.016691842     1.416535e-04 #> [6,]     8.236589e-05   -0.02435646 0.006075209    0.052051866     1.427046e-03 #>      V3_low-energy  V3_sigmoid V4_high-energy V4_higher-energy V4_low-energy #> [1,]    0.01750692 0.007174904    0.022796605     2.658336e-04    0.26230905 #> [2,]   -0.15843484 0.003543384    0.009617056     4.669075e-05   -0.16475654 #> [3,]   -0.01249058 0.006368738    0.023247253     2.765722e-04    0.27150521 #> [4,]   -0.06278815 0.005212428    0.011846275     7.100326e-05   -0.06139678 #> [5,]    0.11074320 0.010403007    0.007451298     2.796854e-05   -0.28617110 #> [6,]    0.59724554 0.095817799    0.008238755     3.421931e-05   -0.23923513 #>       V4_sigmoid V5_high-energy V5_higher-energy V5_low-energy  V5_sigmoid #> [1,] 0.019347516     0.03466020     6.218445e-04     0.4471128 0.044122637 #> [2,] 0.003452878     0.02546449     3.325813e-04     0.3136587 0.024089208 #> [3,] 0.020113459     0.01940534     1.919727e-04     0.1850414 0.014046877 #> [4,] 0.005241478     0.01763976     1.583492e-04     0.1381667 0.011614992 #> [5,] 0.002071180     0.01019263     5.247696e-05    -0.1362124 0.003879132 #> [6,] 0.002532909     0.02320802     2.756287e-04     0.2707136 0.020046214"},{"path":"https://tanaylab.github.io/iceqream/reference/create_sequence_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Sequence Features — create_sequence_features","title":"Create Sequence Features — create_sequence_features","text":"function generates sequence features given intervals. calculates dinucleotide frequencies GC content, normalizes features, returns matrix.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_sequence_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Sequence Features — create_sequence_features","text":"","code":"create_sequence_features(   intervals,   size = NULL,   normalize = TRUE,   norm_quant = 0.05 )"},{"path":"https://tanaylab.github.io/iceqream/reference/create_sequence_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Sequence Features — create_sequence_features","text":"intervals data frame containing interval information columns start end. size size sequences extract. NULL, size calculated first interval. normalize logical value indicating whether normalize features range 0-10. norm_quant quantile use normalization. Values quantile 1-quantile truncated, rest linearly scaled 0-10.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/create_sequence_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Sequence Features — create_sequence_features","text":"matrix normalized sequence features including GC content dinucleotide frequencies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/distill_traj_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Distill trajectory model — distill_traj_model","title":"Distill trajectory model — distill_traj_model","text":"function takes trajectory model reduces number motifs using 'prego'.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/distill_traj_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distill trajectory model — distill_traj_model","text":"","code":"distill_traj_model(   traj_model,   max_motif_num,   min_diff = 0.1,   intra_cor_thresh = 0.6,   use_non_linear = TRUE,   parallel = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/distill_traj_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distill trajectory model — distill_traj_model","text":"traj_model trajectory model object max_motif_num maximum number motifs select min_diff minimum difference scores use distillation intra_cor_thresh threshold average intra-cluster correlation split clusters. NULL, splitting done. use_non_linear Whether use non-linear features. FALSE, glm model without non-linear features used. parallel Whether use parallel processing","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/distill_traj_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distill trajectory model — distill_traj_model","text":"distilled trajectory model object max_motif_num models + additional features.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/distill_traj_model_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Distills multiple trajectory models — distill_traj_model_multi","title":"Distills multiple trajectory models — distill_traj_model_multi","text":"function takes list trajectory models performs distillation process create single set motifs.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/distill_traj_model_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distills multiple trajectory models — distill_traj_model_multi","text":"","code":"distill_traj_model_multi(   traj_models,   max_motif_num = NULL,   min_diff = 0.1,   intra_cor_thresh = 0.6,   distill_single = FALSE,   learn_single_spatial = TRUE,   use_all_motifs = FALSE,   bits_threshold = 1.75,   r2_threshold = NULL,   seed = 60427,   parallel = TRUE,   cluster_report_dir = NULL,   filter_models = TRUE,   unique_motifs = FALSE )"},{"path":"https://tanaylab.github.io/iceqream/reference/distill_traj_model_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distills multiple trajectory models — distill_traj_model_multi","text":"traj_models list trajectory models. max_motif_num maximum number motifs identified. NULL - number set maximum number motifs input models. min_diff minimum difference scores use distillation intra_cor_thresh threshold average intra-cluster correlation split clusters. NULL, splitting done. distill_single Logical indicating whether distill clusters single motif. learn_single_spatial Logical indicating whether learn spatial features clusters single motif, skip . use_all_motifs Logical indicating whether use motifs resulting models. FALSE, motifs clusters motif original model used. bits_threshold minimal sum bits feature included model. r2_threshold minimal R^2 feature included model. seed random seed reproducibility. Defaults 60427. parallel Whether use parallel processing cluster_report_dir directory store cluster reports. NULL, png created cluster. filter_models Logical indicating whether filter models distillation. Defaults TRUE. unique_motifs Logical indicating whether keep unique motifs. Defaults FALSE.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/distill_traj_model_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distills multiple trajectory models — distill_traj_model_multi","text":"distilled trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_multi_traj_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter multi-trajectory model — filter_multi_traj_model","title":"Filter multi-trajectory model — filter_multi_traj_model","text":"Filter multi-trajectory model","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_multi_traj_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter multi-trajectory model — filter_multi_traj_model","text":"","code":"filter_multi_traj_model(   multi_traj,   r2_threshold = 0.0005,   bits_threshold = 1.75,   sample_frac = 0.1,   filter_full = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/filter_multi_traj_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter multi-trajectory model — filter_multi_traj_model","text":"multi_traj TrajectoryModelMulti model object. r2_threshold minimal R^2 feature included model. bits_threshold minimal sum bits feature included model. sample_frac fraction samples use computing r2 without model. NULL, samples used. filter_full logical value indicating whether filter full models (@models_full) reduced models (@models). Default TRUE.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_multi_traj_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter multi-trajectory model — filter_multi_traj_model","text":"filtered TrajectoryModelMulti object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_multi_traj_model_by_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter multi-trajectory model by beta — filter_multi_traj_model_by_beta","title":"Filter multi-trajectory model by beta — filter_multi_traj_model_by_beta","text":"Filter multi-trajectory model beta","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_multi_traj_model_by_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter multi-trajectory model by beta — filter_multi_traj_model_by_beta","text":"","code":"filter_multi_traj_model_by_beta(   multi_traj,   beta_threshold = 0.005,   filter_full = TRUE,   unify = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/filter_multi_traj_model_by_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter multi-trajectory model by beta — filter_multi_traj_model_by_beta","text":"multi_traj TrajectoryModelMulti model object. beta_threshold threshold absolute value beta coefficient. Default 0.005. filter_full logical value indicating whether filter full models (@models_full) reduced models (@models). Default TRUE. unify Whether use motifs trajectory filtering","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_multi_traj_model_by_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter multi-trajectory model by beta — filter_multi_traj_model_by_beta","text":"filtered TrajectoryModelMulti object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_traj_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a trajectory model using punctuated regression. — filter_traj_model","title":"Filter a trajectory model using punctuated regression. — filter_traj_model","text":"Run regression without feature filter features improve model r2_threshold.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_traj_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a trajectory model using punctuated regression. — filter_traj_model","text":"","code":"filter_traj_model(   traj_model,   r2_threshold = 0.0005,   bits_threshold = 1.75,   sample_frac = 0.1,   seed = 60427 )"},{"path":"https://tanaylab.github.io/iceqream/reference/filter_traj_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a trajectory model using punctuated regression. — filter_traj_model","text":"traj_model instance TrajectoryModel. r2_threshold minimal R^2 feature included model. bits_threshold minimal sum bits feature included model. sample_frac fraction samples use computing r2 without model. NULL, samples used. seed seed use reproducibility sampling data.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_traj_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a trajectory model using punctuated regression. — filter_traj_model","text":"instance TrajectoryModel filtered model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_traj_model_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter trajectory model intervals — filter_traj_model_intervals","title":"Filter trajectory model intervals — filter_traj_model_intervals","text":"function filters trajectory model selecting specific intervals based indices.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_traj_model_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter trajectory model intervals — filter_traj_model_intervals","text":"","code":"filter_traj_model_intervals(traj_model, idxs)"},{"path":"https://tanaylab.github.io/iceqream/reference/filter_traj_model_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter trajectory model intervals — filter_traj_model_intervals","text":"traj_model trajectory model object filter. idxs indices intervals select.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/filter_traj_model_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter trajectory model intervals — filter_traj_model_intervals","text":"filtered trajectory model object.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/homogenize_pssm_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Homogenize a list of PSSM models — homogenize_pssm_models","title":"Homogenize a list of PSSM models — homogenize_pssm_models","text":"function adjusts PSSM model input list GC content higher content. model's GC content higher content, function applies reverse complement model using prego pssm_rc function.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/homogenize_pssm_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Homogenize a list of PSSM models — homogenize_pssm_models","text":"","code":"homogenize_pssm_models(models)"},{"path":"https://tanaylab.github.io/iceqream/reference/homogenize_pssm_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Homogenize a list of PSSM models — homogenize_pssm_models","text":"models list PSSM models. model list pssm element, data frame containing columns '', 'C', 'G', 'T', 'pos'.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/homogenize_pssm_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Homogenize a list of PSSM models — homogenize_pssm_models","text":"list homogenized PSSM models.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/homogenize_pssm_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Homogenize a list of PSSM models — homogenize_pssm_models","text":"","code":"# Create simulated data pssm1 <- data.frame(     pos = 1:4,     A = c(0.1, 0.2, 0.3, 0.4),     C = c(0.3, 0.3, 0.2, 0.1),     G = c(0.3, 0.3, 0.3, 0.3),     T = c(0.3, 0.2, 0.2, 0.2) ) pssm2 <- data.frame(     pos = 1:4,     A = c(0.1, 0.2, 0.3, 0.4),     C = c(0.1, 0.1, 0.1, 0.1),     G = c(0.2, 0.2, 0.2, 0.2),     T = c(0.6, 0.5, 0.4, 0.3) )  models <- list(list(pssm = pssm1), list(pssm = pssm2))  # Homogenize the models homogenized_models <- homogenize_pssm_models(models)"},{"path":"https://tanaylab.github.io/iceqream/reference/iceqream-package.html","id":null,"dir":"Reference","previous_headings":"","what":"iceqream: Interpretable Computational Engine for Quantitative Regression of Enhancer ATAC Motifs — iceqream-package","title":"iceqream: Interpretable Computational Engine for Quantitative Regression of Enhancer ATAC Motifs — iceqream-package","text":"iceqream package regressing accessibility sequences using physical models TF binding, models TF effective concentrations latent variables activate repress regulatory elements nonlinear fashion, possible contribution pairwise interactions synergistic chromosomal domain effects. iceqream allows inference synthesis models explaining accessibility dynamics entire single cell manifold.","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/iceqream-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"iceqream: Interpretable Computational Engine for Quantitative Regression of Enhancer ATAC Motifs — iceqream-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il Authors: Akhiad Bercovich akhiad.bercovich@weizmann.ac.il Amos Tanay amos.tanay@weizmann.ac.il","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/infer_trajectory_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer trajectory motifs using a pre-trained trajectory model — infer_trajectory_motifs","title":"Infer trajectory motifs using a pre-trained trajectory model — infer_trajectory_motifs","text":"function infers motif energies set peaks using pre-trained trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/infer_trajectory_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer trajectory motifs using a pre-trained trajectory model — infer_trajectory_motifs","text":"","code":"infer_trajectory_motifs(   traj_model,   peak_intervals,   atac_scores = NULL,   bin_start = 1,   bin_end = ncol(atac_scores),   additional_features = NULL,   test_energies = NULL,   diff_score = NULL,   sequences = NULL,   norm_sequences = NULL )"},{"path":"https://tanaylab.github.io/iceqream/reference/infer_trajectory_motifs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer trajectory motifs using a pre-trained trajectory model — infer_trajectory_motifs","text":"traj_model trajectory model object, returned regress_trajectory_motifs peak_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peak. atac_scores Optional. numeric matrix, representing mean ATAC score per bin per peak. Rows: peaks, columns: bins. default iceqream regress last column minus first column. want regress something else, please either change bin_start bin_end, provide atac_diff instead. normalize_bins TRUE, scores normalized 0 1. bin_start start trajectory. Default: 1 bin_end end trajectory. Default: last bin (used atac_scores provided) additional_features data frame, representing additional genomic features (e.g. CpG content, distance TSS, etc.) peak. Note NA values replaced 0. test_energies already computed matrix motif energies test peaks. advanced option provide energies directly. diff_score difference ATAC-seq scores end start peak. provided, function ignore atac_scores parameter. sequences vector strings containing sequences peaks. provided, sequences extracted genome using peak intervals. norm_sequences vector strings containing sequences normalization intervals. provided, sequences extracted genome using normalization intervals.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/infer_trajectory_motifs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer trajectory motifs using a pre-trained trajectory model — infer_trajectory_motifs","text":"TrajectoryModel object contains original ('train') peaks newly inferred ('test') peaks. field @type indicates whether peak 'train' 'test' peak. R^2 statistics computed object@params$stats.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/infer_trajectory_motifs_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer trajectory motifs for a multi-trajectory model — infer_trajectory_motifs_multi","title":"Infer trajectory motifs for a multi-trajectory model — infer_trajectory_motifs_multi","text":"function infers trajectory motifs individual trajectory multi-trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/infer_trajectory_motifs_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer trajectory motifs for a multi-trajectory model — infer_trajectory_motifs_multi","text":"","code":"infer_trajectory_motifs_multi(   traj_multi,   peak_intervals,   atac_scores = NULL,   bin_start = 1,   bin_end = purrr::map(atac_scores, ncol),   additional_features = NULL )"},{"path":"https://tanaylab.github.io/iceqream/reference/infer_trajectory_motifs_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer trajectory motifs for a multi-trajectory model — infer_trajectory_motifs_multi","text":"traj_multi TrajectoryModelMulti object. peak_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peak. atac_scores list data frames ATAC-seq scores individual trajectory. bin_start start trajectory. Default: 1 bin_end end trajectory. Default: last bin (used atac_scores provided) additional_features list data frames additional features individual trajectory.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/infer_trajectory_motifs_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer trajectory motifs for a multi-trajectory model — infer_trajectory_motifs_multi","text":"TrajectoryModelMulti object result infer_trajectory_motifs individual trajectory.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/initialize-IQFeatureGroup-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize an IQFeatureGroup object — initialize,IQFeatureGroup-method","title":"Initialize an IQFeatureGroup object — initialize,IQFeatureGroup-method","text":"Initialize IQFeatureGroup object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/initialize-IQFeatureGroup-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize an IQFeatureGroup object — initialize,IQFeatureGroup-method","text":"","code":"# S4 method for IQFeatureGroup initialize(.Object, features, compute_func, size)"},{"path":"https://tanaylab.github.io/iceqream/reference/initialize-IQFeatureGroup-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize an IQFeatureGroup object — initialize,IQFeatureGroup-method","text":".Object IQFeatureGroup object initialize. features list IQSeqFeature objects. compute_func function compute features group . size size sequences use feature computation.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/initialize-IQFeatureGroup-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize an IQFeatureGroup object — initialize,IQFeatureGroup-method","text":"initialized IQFeatureGroup object.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/initialize-IQSeqFeature-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize an IQSeqFeature object — initialize,IQSeqFeature-method","title":"Initialize an IQSeqFeature object — initialize,IQSeqFeature-method","text":"Initialize IQSeqFeature object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/initialize-IQSeqFeature-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize an IQSeqFeature object — initialize,IQSeqFeature-method","text":"","code":"# S4 method for class 'IQSeqFeature' initialize(   .Object,   name,   coefs,   compute_func,   min_value,   max_value,   quantile = 0.99,   size )"},{"path":"https://tanaylab.github.io/iceqream/reference/initialize-IQSeqFeature-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize an IQSeqFeature object — initialize,IQSeqFeature-method","text":".Object IQSeqFeature object initialize. name name feature. coefs coefficients feature. compute_func function compute feature. min_value minimum value normalization. max_value maximum value normalization. quantile quantile use normalization. size size sequences use feature computation.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/initialize-IQSeqFeature-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize an IQSeqFeature object — initialize,IQSeqFeature-method","text":"initialized IQSeqFeature object.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature.compute_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the IQ feature response — iq_feature.compute_response","title":"Compute the IQ feature response — iq_feature.compute_response","text":"function computes IQ feature response given set values.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature.compute_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the IQ feature response — iq_feature.compute_response","text":"","code":"iq_feature.compute_response(iq, values)"},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature.compute_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the IQ feature response — iq_feature.compute_response","text":"iq IQFeature object. values vector values compute IQ feature.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature.compute_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the IQ feature response — iq_feature.compute_response","text":"vector computed IQ feature responses.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_group.compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute features for an IQFeatureGroup — iq_feature_group.compute","title":"Compute features for an IQFeatureGroup — iq_feature_group.compute","text":"function computes features group given set sequences intervals.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_group.compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute features for an IQFeatureGroup — iq_feature_group.compute","text":"","code":"iq_feature_group.compute(group, sequences = NULL, intervals = NULL)"},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_group.compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute features for an IQFeatureGroup — iq_feature_group.compute","text":"group IQFeatureGroup object. sequences vector DNA sequences. Optional intervals provided. intervals data frame genomic intervals columns 'chrom', 'start', 'end'. Optional sequences provided.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_group.compute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute features for an IQFeatureGroup — iq_feature_group.compute","text":"matrix computed normalized feature values.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_list.compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute features for a list of IQFeature and IQFeatureGroup objects — iq_feature_list.compute","title":"Compute features for a list of IQFeature and IQFeatureGroup objects — iq_feature_list.compute","text":"function computes features given list IQFeature IQFeatureGroup objects, using either provided sequences intervals.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_list.compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute features for a list of IQFeature and IQFeatureGroup objects — iq_feature_list.compute","text":"","code":"iq_feature_list.compute(feature_list, sequences = NULL, intervals = NULL)"},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_list.compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute features for a list of IQFeature and IQFeatureGroup objects — iq_feature_list.compute","text":"feature_list list IQFeature /IQFeatureGroup objects. sequences vector DNA sequences. Optional intervals provided. intervals data frame genomic intervals columns 'chrom', 'start', 'end'. Optional sequences provided.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_list.compute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute features for a list of IQFeature and IQFeatureGroup objects — iq_feature_list.compute","text":"data frame containing computed features objects feature_list.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_list.compute_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute IQ feature list response — iq_feature_list.compute_response","title":"Compute IQ feature list response — iq_feature_list.compute_response","text":"function computes IQ response given list IQ features matrix values.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_list.compute_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute IQ feature list response — iq_feature_list.compute_response","text":"","code":"iq_feature_list.compute_response(iq_list, mat)"},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_list.compute_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute IQ feature list response — iq_feature_list.compute_response","text":"iq_list list IQFeature objects mat input matrix","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_feature_list.compute_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute IQ feature list response — iq_feature_list.compute_response","text":"matrix containing computed IQ feature responses.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform IQ regression on peak intervals — iq_regression","title":"Perform IQ regression on peak intervals — iq_regression","text":"Perform IQ regression peak intervals using provided ATAC-seq scores, ATAC-seq score differences, normalized intervals, motif energies, additional features, dividing intervals training testing sets.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform IQ regression on peak intervals — iq_regression","text":"","code":"iq_regression(   peak_intervals,   atac_scores = NULL,   atac_diff = NULL,   normalize_bins = TRUE,   norm_intervals = NULL,   motif_energies = NULL,   additional_features = NULL,   add_sequences_features = TRUE,   max_motif_num = 30,   traj_prego = NULL,   peaks_size = 500,   bin_start = 1,   bin_end = NULL,   seed = 60427,   frac_train = 0.8,   train_idxs = NULL,   test_idxs = NULL,   filter_model = TRUE,   min_diff = 0.1,   prego_min_diff = min_diff,   prego_sample_for_kmers = TRUE,   prego_sample_fraction = 0.1,   prego_energy_norm_quantile = 1,   prego_spat_bin_size = NULL,   prego_spat_num_bins = NULL,   r2_threshold = 0.0005,   bits_threshold = 1.75,   filter_sample_frac = 0.1,   include_interactions = FALSE,   interaction_threshold = 0.001,   max_motif_interaction_n = NULL,   max_add_interaction_n = NULL,   n_prego_motifs = 0,   n_cores = NULL,   output_dir = NULL,   plot_report = TRUE,   ... )"},{"path":"https://tanaylab.github.io/iceqream/reference/iq_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform IQ regression on peak intervals — iq_regression","text":"peak_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peak. atac_scores Optional. numeric matrix, representing mean ATAC score per bin per peak. Rows: peaks, columns: bins. default iceqream regress last column minus first column. want regress something else, please either change bin_start bin_end, provide atac_diff instead. normalize_bins TRUE, scores normalized 0 1. atac_diff Optional. numeric vector representing differential accessibility start end trajectory. Either atac_scores must provided. normalize_bins whether normalize ATAC scores 0 1. Default: TRUE norm_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peaks used energy normalization. NULL, function use peak_intervals normalization. motif_energies numeric matrix, representing energy motif peak. NULL, function use pssm_db calculate motif energies. Note might take . additional_features data frame, representing additional genomic features (e.g. CpG content, distance TSS, etc.) peak. Note NA values replaced 0. add_sequences_features Add CG content dinuceotide content additional features. max_motif_num maximum number motifs consider. Default: 50 traj_prego output learn_traj_prego. provided, additional prego models inferred. peaks_size size peaks extract sequences . Default: 500bp bin_start start trajectory. Default: 1 bin_end end trajectory. Default: last bin (used atac_scores provided) seed random seed reproducibility. frac_train numeric value indicating fraction intervals use training (default 0.8). train_idxs vector indices use training. NULL, training set randomly selected. test_idxs vector indices use testing. NULL, testing set complement training set. filter_model logical value indicating whether filter model (default TRUE). min_diff minimal ATAC difference peak participate initial prego motif inference distillation step (distill_on_diff TRUE). prego_sample_for_kmers whether use sample peaks kmer screening. Default: TRUE prego_sample_fraction Fraction peaks sample prego motif inference. smaller number faster might lead -fitting. Default: 0.1 r2_threshold minimal R^2 feature included model. bits_threshold minimal sum bits feature included model. filter_sample_frac fraction samples use computing r2 without model filtering step. NULL, samples used. include_interactions whether include interactions motifs / additional fetures model features. IQ create interactions significant additional features motifs, significant motifs. Default: FALSE interaction_threshold threshold selecting features create interactions. IQ learns linear model features selects features coefficients threshold. Default: 0.001 max_motif_interaction_n maximum number motifs consider interactions. NULL, motifs interaction_threshold considered. Default: NULL max_add_interaction_n maximum number additional features consider interactions. NULL, additional features interaction_threshold considered. Default: NULL n_prego_motifs number prego motifs (de-novo motifs) consider. n_cores number cores use parallel processing. NULL, number threads automatically determined 80% available cores. See prego::set_parallel details. output_dir directory save intermediate results. NULL, train test indices saved CSV file, together models step (filtering, filtering, adding interactions). models saved RDS files. directory exists, files overwritten. plot_report logical value indicating whether plot model report. Default TRUE. ... Arguments passed regress_trajectory_motifs n_clust_factor factor divide number keep clustering. e.g. n_clust_factor > 1 number motifs keep reduced factor n_clust_factor. Default: 1 norm_motif_energies numeric matrix, representing normalized energy motif interval norm_intervals. NULL, function use pssm_db calculate motif energies. Note might take . pssm_db data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name. motifs motif_energies (column names) present 'motif' column. Default: motifs. min_tss_distance distance Transcription Start Site (TSS) classify peak enhancer. Default: 5000. NULL, filtering performed - use option peaks already filtered.  Note order filter peaks close TSS, current misha genome must intervals set called intervs.global.tss. normalize_energies whether normalize motif energies. Set FALSE motif energies already normalized. min_initial_energy_cor minimal correlation motif normalized energy ATAC difference. energy_norm_quantile quantile energy used normalization. Default: 1 norm_energy_max maximum value normalized energy. Default: 10 distill_on_diff whether distill motifs based differential accessibility. FALSE, peaks used distillation, TRUE - peaks differential accessibility >= min_diff used. feature_selection_beta beta parameter used feature selection. filter_using_r2 whether filter features using R^2. parallel whether use parallel processing glmnet. spat_num_bins number spatial bins use. spat_bin_size size spatial bin. kmer_sequence_length length kmer sequence use kmer screening. default full sequence used. max_interaction_n maximum number interactions consider. alpha elasticnet mixing parameter, \\(0\\le\\alpha\\le 1\\). penalty defined $$(1-\\alpha)/2||\\beta||_2^2+\\alpha||\\beta||_1.$$ alpha=1 lasso penalty, alpha=0 ridge penalty. lambda user supplied lambda sequence. Typical usage program compute lambda sequence based nlambda lambda.min.ratio. Supplying value lambda overrides . WARNING: use care. Avoid supplying single value lambda (predictions CV use predict() instead).  Supply instead decreasing sequence lambda values. glmnet relies warms starts speed, often faster fit whole path compute single fit. symmetrize_spat TRUE, spatial model symmetrized around center bin. Default: TRUE.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform IQ regression on peak intervals — iq_regression","text":"instance TrajectoryModel final model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_seq_feature.compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the IQSeqFeature — iq_seq_feature.compute","title":"Compute the IQSeqFeature — iq_seq_feature.compute","text":"function computes IQ sequence feature given set sequences.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_seq_feature.compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the IQSeqFeature — iq_seq_feature.compute","text":"","code":"iq_seq_feature.compute(iq, sequences)"},{"path":"https://tanaylab.github.io/iceqream/reference/iq_seq_feature.compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the IQSeqFeature — iq_seq_feature.compute","text":"iq IQSeqFeature object. sequences vector DNA sequences.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/iq_seq_feature.compute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the IQSeqFeature — iq_seq_feature.compute","text":"vector computed normalized IQ sequence feature values.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/learn_traj_prego.html","id":null,"dir":"Reference","previous_headings":"","what":"Learn 'prego' models for ATAC difference of a trajectory — learn_traj_prego","title":"Learn 'prego' models for ATAC difference of a trajectory — learn_traj_prego","text":"Learn 'prego' models ATAC difference trajectory","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/learn_traj_prego.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learn 'prego' models for ATAC difference of a trajectory — learn_traj_prego","text":"","code":"learn_traj_prego(   peak_intervals,   atac_diff,   n_motifs,   min_diff = 0.2,   energy_norm_quantile = 1,   norm_energy_max = 10,   min_energy = -7,   sample_for_kmers = FALSE,   sample_fraction = 0.1,   sequences = NULL,   seed = NULL,   peaks_size = 300,   additional_features = NULL,   norm_intervals = peak_intervals,   ... )"},{"path":"https://tanaylab.github.io/iceqream/reference/learn_traj_prego.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learn 'prego' models for ATAC difference of a trajectory — learn_traj_prego","text":"peak_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peak, additional column named \"const\" indicating whether peak constitutive therefore used regression. Optionally, column named \"cluster\" can added indication cluster peak. atac_diff numeric vector, indicating ATAC difference peak n_motifs Number motifs learn. least 2 min_diff Minimum ATAC difference include peak training energy_norm_quantile quantile energy used normalization. Default: 1 norm_energy_max maximum value normalized energy. Default: 10 min_energy Minimum energy value normalization (default: -7) sample_for_kmers Whether sample kmers training. Default: TRUE sample_fraction Fraction peaks sample training. Default: 0.1#' sequences character vector sequences learn motifs . NULL, sequences peaks used. seed Random seed peaks_size size peaks extract sequences . Default: 300bp additional_features matrix additional features filter learning motifs (e.g. CpG content, dinucleotide content, etc.) norm_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peaks used energy normalization. NULL, function use peak_intervals normalization. ... Additional arguments passed prego::regress_pwm","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/logist.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic Function — logist","title":"Logistic Function — logist","text":"Calculates logistic function value given parameters input.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/logist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Function — logist","text":"","code":"logist(x, x_0 = 0, L = 1, k = 1)"},{"path":"https://tanaylab.github.io/iceqream/reference/logist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic Function — logist","text":"x Numeric vector, values logistic function evaluated. x_0 Numeric, x-value sigmoid's midpoint. Default 0. L Numeric, maximum value sigmoid. Default 1. k Numeric, steepness slope sigmoid. Default 1.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/logist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic Function — logist","text":"numeric vector logistic function values.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/logist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic Function — logist","text":"","code":"x_vals <- seq(0, 10, by = 0.1)  # Calculate the features for each scenario features_low_energy <- logist(x_vals, x_0 = 0, L = 2, k = 0.5) - 1 features_high_energy <- logist(x_vals, x_0 = 10, L = 2, k = 0.5) features_sigmoid <- logist(x_vals - 5, x_0 = 0, L = 1, k = 1) features_higher_energy <- logist(x_vals, x_0 = 10, L = 2, k = 1) features_early2 <- logist(x_vals, x_0 = 0, L = 2, k = 1) - 1  # Base plot setup plot(x_vals, features_low_energy * 10,     type = \"l\", col = \"blue\",     main = \"Variations of the Logistic Function\",     xlab = \"x\", ylab = \"y\", ylim = c(0, 10), lwd = 2 )  # Adding other variations lines(x_vals, features_high_energy * 10, col = \"orange\", lwd = 2) lines(x_vals, features_sigmoid * 10, col = \"purple\", lwd = 2) lines(x_vals, features_higher_energy * 10, col = \"brown\", lwd = 2) lines(x_vals, features_early2 * 10, col = \"green\", lwd = 2) lines(x_vals, x_vals, col = \"black\", lwd = 2, lty = 2)  legend(\"bottomright\",     legend = c(\"Low Energy\", \"High Energy\", \"Sigmoid\", \"Higher Energy\", \"Early 2\", \"Linear\"),     col = c(\"blue\", \"orange\", \"purple\", \"brown\", \"green\", \"black\"),     lty = 1,     lwd = 2 )"},{"path":"https://tanaylab.github.io/iceqream/reference/match_traj_model_motif_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Match trajectory model motif names — match_traj_model_motif_names","title":"Match trajectory model motif names — match_traj_model_motif_names","text":"function matches motif names trajectory model given dataset. used order give 'friendly' names motif models. default dataset \"HOMER\". Note run might slow.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/match_traj_model_motif_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match trajectory model motif names — match_traj_model_motif_names","text":"","code":"match_traj_model_motif_names(   traj_model,   dataset = prego::all_motif_datasets() %>% filter(dataset == \"HOMER\") )"},{"path":"https://tanaylab.github.io/iceqream/reference/match_traj_model_motif_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match trajectory model motif names — match_traj_model_motif_names","text":"traj_model trajectory model object. dataset dataset match motif names . Default \"HOMER\" dataset.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/match_traj_model_motif_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match trajectory model motif names — match_traj_model_motif_names","text":"named character vector mapping motif names trajectory model matched motif names dataset.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/merge_trajectory_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Trajectory Motifs — merge_trajectory_motifs","title":"Merge Trajectory Motifs — merge_trajectory_motifs","text":"function merges multiple motifs (chosen manually) new motif trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/merge_trajectory_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Trajectory Motifs — merge_trajectory_motifs","text":"","code":"merge_trajectory_motifs(   traj_model,   motifs,   new_motif_name,   min_diff = 0.1,   seed = 60427 )"},{"path":"https://tanaylab.github.io/iceqream/reference/merge_trajectory_motifs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Trajectory Motifs — merge_trajectory_motifs","text":"traj_model trajectory model object. motifs character vector specifying names motifs merged. new_motif_name character string specifying name new merged motif. min_diff numeric value specifying minimum absolute difference ATAC scores motif considered merging process. Default 0.1. seed integer specifying seed random number generation. Default 60427.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/merge_trajectory_motifs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Trajectory Motifs — merge_trajectory_motifs","text":"modified trajectory model object merged motif updated attributes.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/merge_trajectory_motifs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge Trajectory Motifs — merge_trajectory_motifs","text":"function validates trajectory model, checks specified motifs exist model, performs merging process. computes merged motif using distillation motifs partial response, updates model features, returns modified trajectory model object.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Motif Database — motif_db","title":"Motif Database — motif_db","text":"compilation DNA motifs various sources.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Motif Database — motif_db","text":"","code":"motif_db"},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Motif Database — motif_db","text":"data frame 270340 rows 9 columns: motif Character. name identifier motif. pos Integer. position within motif. Numeric. score adenine position. C Numeric. score cytosine position. G Numeric. score guanine position. T Numeric. score thymine position. dataset Character. source dataset motif. motif_orig Character. name motif without database prefix. cluster Character. SCENIC motifs, cluster motif belongs.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Motif Database — motif_db","text":"HOMER: Heinz S, Benner C, Spann N, Bertolino E et al. Simple Combinations Lineage-Determining Transcription Factors Prime cis-Regulatory Elements Required Macrophage B Cell Identities. Mol Cell 2010 May 28;38(4):576-589. PMID: 20513432 JASPAR: Castro-Mondragon JA, Riudavets-Puig R, Rauluseviciute , Berhanu Lemma R, Turchi L, Blanc-Mathieu R, Lucas J, Boddie P, Khan , Manosalva Pérez N, Fornes O, Leung TY, Aguirre , Hammal F, Schmelter D, Baranasic D, Ballester B, Sandelin , Lenhard B, Vandepoele K, Wasserman WW, Parcy F, Mathelier JASPAR 2022: 9th release open-access database transcription factor binding profiles Nucleic Acids Res. 2022 Jan 7;50(D1):D165-D173.; doi: 10.1093/nar/gkab1113 JOLMA: Jolma, ., Yin, Y., Nitta, K. et al. DNA-dependent formation transcription factor pairs alters binding specificity. Nature 534, S15–S16 (2016). https://doi.org/10.1038/nature18912 HOCOMOCO: Ivan V. Kulakovskiy; Ilya E. Vorontsov; Ivan S. Yevshin; Ruslan N. Sharipov; Alla D. Fedorova; Eugene . Rumynskiy; Yulia . Medvedeva; Arturo Magana-Mora; Vladimir B. Bajic; Dmitry . Papatsenko; Fedor . Kolpakov; Vsevolod J. Makeev: HOCOMOCO: towards complete collection transcription factor binding models human mouse via large-scale ChIP-Seq analysis. Nucl. Acids Res., Database issue, gkx1106 (11 November 2017). https://doi.org/10.1093/nar/gkx1106 SCENIC: Aibar, S., González-Blas, C., Moerman, T. et al. SCENIC: single-cell regulatory network inference clustering. Nat Methods 14, 1083–1086 (2017). https://doi.org/10.1038/nmeth.4463 SCENIC+: Bravo González-Blas, C., De Winter, S., Hulselmans, G. et al. SCENIC+: single-cell multiomic inference enhancers gene regulatory networks. Nat Methods 20, 1355–1367 (2023). https://doi.org/10.1038/s41592-023-01938-4","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Motif Database — motif_db","text":"","code":"data(motif_db) head(motif_db) #>                                       motif pos            A            C #> 1 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   1 0.0009524922 0.0009544146 #> 2 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   2 0.0512315113 0.0812262143 #> 3 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   3 0.0010845939 0.6574809936 #> 4 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   4 0.2605162531 0.1952148060 #> 5 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   5 0.0009498837 0.5682242112 #> 6 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   6 0.0013589649 0.0776041520 #>            G          T dataset                         motif_orig cluster #> 1 0.56711077 0.56534915  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 2 0.52173304 0.53077843  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 3 0.07061333 0.37197952  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 4 0.39681136 0.44779432  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 5 0.49618562 0.07882282  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 6 0.09271003 0.85316236  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1"},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db_scenic_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"SCENIC Motif Clusters — motif_db_scenic_clusters","title":"SCENIC Motif Clusters — motif_db_scenic_clusters","text":"data frame containing representative motif SCENIC cluster.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db_scenic_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCENIC Motif Clusters — motif_db_scenic_clusters","text":"","code":"motif_db_scenic_clusters"},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db_scenic_clusters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SCENIC Motif Clusters — motif_db_scenic_clusters","text":"motif_db filtered include SCENIC motifs.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db_scenic_clusters.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SCENIC Motif Clusters — motif_db_scenic_clusters","text":"https://doi.org/10.1038/nmeth.4463","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/motif_db_scenic_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SCENIC Motif Clusters — motif_db_scenic_clusters","text":"","code":"data(motif_db_scenic_clusters) head(motif_db_scenic_clusters) #>                                       motif pos          A         C         G #> 1 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   1  0.1633990  0.163399 96.895421 #> 2 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   2  9.9673210 13.888901 72.712407 #> 3 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   3  0.1633990 98.856209  0.163399 #> 4 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   4 65.5228541 14.542490 15.849689 #> 5 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   5  0.1633990 97.549021  2.124180 #> 6 SCENIC.kznf__ZNF264_Imbeault2017_OM_RCADE   6  0.1633989  9.313725  9.967315 #>            T dataset                         motif_orig cluster #> 1  2.7777806  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 2  3.4313703  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 3  0.8169931  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 4  4.0849671  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 5  0.1633990  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1 #> 6 80.5555605  SCENIC kznf__ZNF264_Imbeault2017_OM_RCADE     0.1"},{"path":"https://tanaylab.github.io/iceqream/reference/norm01.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Values to the 0-1 Range — norm01","title":"Normalize Values to the 0-1 Range — norm01","text":"function scales translates values input vector x minimum value becomes 0 maximum value becomes 1. normalization done first subtracting minimum value element (translation) dividing element new maximum value (scaling).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Values to the 0-1 Range — norm01","text":"","code":"norm01(x)"},{"path":"https://tanaylab.github.io/iceqream/reference/norm01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Values to the 0-1 Range — norm01","text":"x numeric vector needs normalized 0-1 range. x matrix, normalization applied column-wise.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Values to the 0-1 Range — norm01","text":"numeric vector values normalized 0-1 range. x matrix, function returns matrix columns normalized 0-1 range.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Values to the 0-1 Range — norm01","text":"","code":"# Generate random values x <- rnorm(100) range(x) #> [1] -1.900061  2.564408 normed_x <- norm01(x) range(normed_x) # This should show values between 0 and 1 #> [1] 0 1"},{"path":"https://tanaylab.github.io/iceqream/reference/norm0q.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a vector to a specified quantile — norm0q","title":"Normalize a vector to a specified quantile — norm0q","text":"function takes vector x normalizes specified quantile. normalization done subtracting minimum value x dividing result specified quantile x. Values greater 1 capped 1.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm0q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a vector to a specified quantile — norm0q","text":"","code":"norm0q(x, quant = 0.99)"},{"path":"https://tanaylab.github.io/iceqream/reference/norm0q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a vector to a specified quantile — norm0q","text":"x numeric vector normalized quant quantile normalize (default 0.99)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm0q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a vector to a specified quantile — norm0q","text":"normalized vector","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm0q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize a vector to a specified quantile — norm0q","text":"","code":"x <- rnorm(100) normed_x <- norm0q(x)  range(normed_x) # This should show values between 0 and 1 #> [1] 0 1"},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Energy Values of a Vector — norm_energy","title":"Normalize Energy Values of a Vector — norm_energy","text":"function normalizes energy values given vector. normalization process involves transforming energy values using exponential function, followed logarithm base 2. function scales values lie user-specified minimum energy q-th quantile initial energy values.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Energy Values of a Vector — norm_energy","text":"","code":"norm_energy(x, min_energy = -7, q = 1)"},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Energy Values of a Vector — norm_energy","text":"x numeric vector containing energy values normalized. min_energy numeric value representing minimum energy value normalization. Default set -7. q numeric value 0 1, representing quantile energy values used maximum normalization. Default set 1 (max).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Energy Values of a Vector — norm_energy","text":"numeric vector normalized energy values.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Energy Values of a Vector — norm_energy","text":"","code":"# Generate random energy values x <- runif(n = 100, min = -11, max = 0) # Normalize the energy values norm_energy(x) #>   [1] 0.0000000 1.7510064 0.0000000 2.1999360 5.0324659 4.7046640 5.3820270 #>   [8] 0.0000000 0.5785698 5.6452978 0.0000000 3.4704537 2.9982590 4.9237030 #>  [15] 6.8817897 0.0000000 6.7936218 1.6807474 0.0000000 0.0000000 0.0000000 #>  [22] 1.0811420 0.0000000 1.3845202 2.6943816 1.1094402 0.0000000 1.9633541 #>  [29] 1.7582626 0.0000000 0.0000000 2.1334769 5.3759993 3.0002508 0.0000000 #>  [36] 0.0000000 0.0000000 0.0000000 0.5809605 0.0000000 3.1763567 0.1118413 #>  [43] 1.4658960 0.0000000 6.1583792 1.7289254 0.0000000 0.0000000 7.0000000 #>  [50] 0.0000000 0.0000000 3.7368619 1.8432438 0.0000000 5.9695994 0.0000000 #>  [57] 1.5632755 0.0000000 3.1969100 4.8476089 4.9428020 4.1457761 0.0000000 #>  [64] 4.0182657 5.4651457 0.9182832 0.0000000 6.0003541 1.1718340 0.0000000 #>  [71] 5.6358062 3.5998753 0.0000000 0.0000000 0.0000000 0.0000000 0.0257006 #>  [78] 0.0000000 4.1415158 6.4389581 0.0000000 0.0000000 6.9726246 0.0000000 #>  [85] 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 3.1374177 6.5651625 #>  [92] 2.0075307 0.0000000 0.0000000 0.0000000 1.3728656 0.0000000 5.4883894 #>  [99] 3.8409082 0.0000000"},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Energy Matrix — norm_energy_matrix","title":"Normalize Energy Matrix — norm_energy_matrix","text":"function normalizes energy matrix applying logarithmic transformation scaling.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Energy Matrix — norm_energy_matrix","text":"","code":"norm_energy_matrix(   x,   dataset_x = x,   min_energy = -7,   q = 1,   norm_energy_max = 10 )"},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Energy Matrix — norm_energy_matrix","text":"x input matrix normalized. dataset_x reference dataset matrix used normalization. min_energy minimum energy value assigned normalization. Default -7. q quantile value used calculating maximum value reference dataset. Default 1. norm_energy_max maximum value normalized energy values scaled. Default 10.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Energy Matrix — norm_energy_matrix","text":"normalized energy matrix dimensions input matrix.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/norm_energy_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Energy Matrix — norm_energy_matrix","text":"","code":"# Example usage: data <- matrix(rnorm(100), nrow = 10) normalized_data <- norm_energy_matrix(data, data, min_energy = -7, q = 1, norm_energy_max = 10) #> Warning: no non-missing arguments to max; returning -Inf"},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_const.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize ATAC data using constitutive peaks — normalize_const","title":"Normalize ATAC data using constitutive peaks — normalize_const","text":"Normalizes ATAC-seq data using constitutive peaks (peaks consistently active across cell types) reference points.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_const.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize ATAC data using constitutive peaks — normalize_const","text":"","code":"normalize_const(   peaks,   mat,   anchor_cell_type = NULL,   norm_quant = 1,   scaling_quant = 0.9 )"},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_const.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize ATAC data using constitutive peaks — normalize_const","text":"peaks data frame peak intervals logical 'const' column indicating constitutive peaks mat Numeric matrix. matrix normalize (typically output normalize_regional) anchor_cell_type Character NULL. cell type use reference normalization. NULL, uses mean cell types reference. Default: NULL norm_quant Numeric. Quantile used primary normalization step. Default: 1 scaling_quant Numeric. Quantile used final scaling step. Default: 0.9","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_const.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize ATAC data using constitutive peaks — normalize_const","text":"normalized matrix dimensions input, cell type-specific biases corrected using constitutive peaks reference","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_const.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize ATAC data using constitutive peaks — normalize_const","text":"normalization process: Calculates total signal constitutive peaks cell type Normalizes using either specific cell type mean cell types reference Applies quantile-based normalization standardize signal ranges Caps values 1 applies final scaling approach assumes constitutive peaks highly accesible cell types can used reference.","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_const.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize ATAC data using constitutive peaks — normalize_const","text":"","code":"if (FALSE) { # \\dontrun{ # Using mean of all cell types as reference norm_const_mat <- normalize_const(peaks_df, norm_mat)  # Using specific anchor cell type norm_const_mat <- normalize_const(     peaks_df,     norm_mat,     anchor_cell_type = \"CD4_T\",     norm_quant = 0.95,     scaling_quant = 0.9 ) } # }"},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_regional.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize regional ATAC data using punctured windows — normalize_regional","title":"Normalize regional ATAC data using punctured windows — normalize_regional","text":"Performs regional normalization ATAC-seq data calculating marginal coverage windows around peaks. function uses \"punctured window\" approach, signal window around peak (excluding peak ) used normalize peak signal. helps account local background variation accessibility biases generally due GC content mappability.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_regional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize regional ATAC data using punctured windows — normalize_regional","text":"","code":"normalize_regional(   peaks,   mat,   marginal_track,   window_size = 20000,   minimal_quantile = 0.1 )"},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_regional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize regional ATAC data using punctured windows — normalize_regional","text":"peaks data frame containing peak intervals columns 'chrom', 'start', 'end' mat Numeric matrix. raw ATAC signal matrix normalize, peaks rows cell types columns marginal_track Character. Name track containing marginal (summed) signal across cell types window_size Numeric. Size window around peak use normalization (base pairs). Default: 2e4 minimal_quantile Numeric. Minimum quantile punctured window coverage use, prevents division small values. Default: 0.1","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_regional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize regional ATAC data using punctured windows — normalize_regional","text":"normalized matrix dimensions input, value adjusted local background signal","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_regional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize regional ATAC data using punctured windows — normalize_regional","text":"normalization process follows steps: Creates virtual tracks peak signal window signal Calculates punctured window coverage (window minus peak) Normalizes punctured coverage enforcing minimum based minimal_quantile Performs final column-wise normalization","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_regional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize regional ATAC data using punctured windows — normalize_regional","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage norm_mat <- normalize_regional(peaks_df, raw_mat, \"marginal_track\")  # With custom window size and quantile norm_mat <- normalize_regional(     peaks_df,     raw_mat,     \"marginal_track\",     window_size = 2e4,     minimal_quantile = 0.05 ) } # }"},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_to_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert normalized ATAC data to probability-like values — normalize_to_prob","title":"Convert normalized ATAC data to probability-like values — normalize_to_prob","text":"Transforms normalized ATAC-seq signals probability-like values 0 1, using either specified threshold quantile constitutive peak values determine maximum signal level.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_to_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert normalized ATAC data to probability-like values — normalize_to_prob","text":"","code":"normalize_to_prob(peaks, mat, prob1_thresh = NULL, const_quantile = 0.9)"},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_to_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert normalized ATAC data to probability-like values — normalize_to_prob","text":"peaks data frame peak intervals logical 'const' column constitutive peaks mat Numeric matrix. matrix normalize (typically output normalize_const) prob1_thresh Numeric NULL. Signal threshold probability = 1. NULL, calculated constitutive peaks using const_quantile. Default: NULL const_quantile Numeric. Quantile constitutive peak values use threshold prob1_thresh NULL. Default: 0.9","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_to_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert normalized ATAC data to probability-like values — normalize_to_prob","text":"matrix dimensions input, containing probability-like values 0 1","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_to_prob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert normalized ATAC data to probability-like values — normalize_to_prob","text":"normalization process: Determines threshold probability = 1 (either directly constitutive peaks) Divides values threshold Caps values 1 Applies min-max normalization ensure full 0,1 range utilization","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_to_prob.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Convert normalized ATAC data to probability-like values — normalize_to_prob","text":"prob1_thresh NULL, peaks data frame must include logical 'const' column. function stop error column missing.","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_to_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert normalized ATAC data to probability-like values — normalize_to_prob","text":"","code":"if (FALSE) { # \\dontrun{ # Using constitutive peak quantile prob_mat <- normalize_to_prob(peaks_df, norm_const_mat)  # Using specific threshold prob_mat <- normalize_to_prob(     peaks_df,     norm_const_mat,     prob1_thresh = 0.75,     const_quantile = 0.95 ) } # }"},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_with_db_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize motif energies using pre-computed quantiles — normalize_with_db_quantiles","title":"Normalize motif energies using pre-computed quantiles — normalize_with_db_quantiles","text":"Normalize motif energies using pre-computed quantiles","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_with_db_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize motif energies using pre-computed quantiles — normalize_with_db_quantiles","text":"","code":"normalize_with_db_quantiles(   motif_energies,   db_quantiles,   energy_norm_quantile,   min_energy,   norm_energy_max )"},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_with_db_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize motif energies using pre-computed quantiles — normalize_with_db_quantiles","text":"motif_energies Matrix motif energies normalize db_quantiles Matrix pre-computed quantiles normalization energy_norm_quantile Quantile use normalization min_energy Minimum energy value norm_energy_max Maximum normalized energy value","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/normalize_with_db_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize motif energies using pre-computed quantiles — normalize_with_db_quantiles","text":"Normalized motif energies matrix","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute energies / response for a PBM on given sequences — pbm.compute","title":"Compute energies / response for a PBM on given sequences — pbm.compute","text":"Compute energies / response PBM given sequences","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute energies / response for a PBM on given sequences — pbm.compute","text":"","code":"pbm.compute(   pbm,   sequences,   response = FALSE,   func = \"logSumExp\",   normalize_energies = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute energies / response for a PBM on given sequences — pbm.compute","text":"pbm PBM object sequences set sequences compute energies. response logical flag indicating whether compute response. Default FALSE. func function use combine PWMs sequence. Either 'logSumExp' 'max'. default 'logSumExp'. normalize_energies logical flag indicating whether normalize energies range 0-10. Default TRUE. Note response computation requires normalized energies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.compute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute energies / response for a PBM on given sequences — pbm.compute","text":"data frame containing computed energies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.compute_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute local PBM scores / response — pbm.compute_local","title":"Compute local PBM scores / response — pbm.compute_local","text":"function computes local energies given PBM set sequences.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.compute_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute local PBM scores / response — pbm.compute_local","text":"","code":"pbm.compute_local(pbm, sequences, response = FALSE, scaling_q = NULL)"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.compute_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute local PBM scores / response — pbm.compute_local","text":"pbm PBM object sequences vector DNA sequences response Logical, whether compute response (default FALSE) scaling_q Scaling quantile normalization (default NULL)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.compute_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute local PBM scores / response — pbm.compute_local","text":"matrix computed local energies","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.gextract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract PBM scores for genomic intervals — pbm.gextract","title":"Extract PBM scores for genomic intervals — pbm.gextract","text":"function extracts PBM scores given PBM genomic intervals optionally computes response.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.gextract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract PBM scores for genomic intervals — pbm.gextract","text":"","code":"pbm.gextract(   pbm,   intervals,   response = FALSE,   func = \"logSumExp\",   normalize_energies = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.gextract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract PBM scores for genomic intervals — pbm.gextract","text":"pbm PBM object intervals Genomic intervals extract response Logical, whether compute response (default FALSE) func function use combine PWMs sequence. Either 'logSumExp' 'max'. default 'logSumExp'. normalize_energies logical flag indicating whether normalize energies range 0-10. Default TRUE. Note response computation requires normalized energies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.gextract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract PBM scores for genomic intervals — pbm.gextract","text":"intervals, additional column containing PBM scores / response","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.gextract_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract local PBM scores / response — pbm.gextract_local","title":"Extract local PBM scores / response — pbm.gextract_local","text":"function extracts local PBM scores genomic intervals optionally computes response.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.gextract_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract local PBM scores / response — pbm.gextract_local","text":"","code":"pbm.gextract_local(pbm, intervals, response = FALSE, scaling_q = 0.995)"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.gextract_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract local PBM scores / response — pbm.gextract_local","text":"pbm PBM object intervals Genomic intervals extract response Logical, whether compute response (default FALSE) scaling_q Scaling quantile normalization (default NULL)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.gextract_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract local PBM scores / response — pbm.gextract_local","text":"matrix extracted local energies / response","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.normalize_energies.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize energies for a PBM — pbm.normalize_energies","title":"Normalize energies for a PBM — pbm.normalize_energies","text":"function normalizes energies given PBM.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.normalize_energies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize energies for a PBM — pbm.normalize_energies","text":"","code":"pbm.normalize_energies(   pbm,   energies,   max_energy = pbm@max_energy,   min_energy = pbm@min_energy,   energy_range = pbm@energy_range,   norm_energy_max = 10 )"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.normalize_energies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize energies for a PBM — pbm.normalize_energies","text":"pbm PBM object energies vector energy values normalize max_energy maximum energy value (default pbm@max_energy) min_energy minimum energy value (default pbm@min_energy) energy_range range energy values (default pbm@energy_range) norm_energy_max maximum value normalized energy (default 10)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.normalize_energies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize energies for a PBM — pbm.normalize_energies","text":"vector normalized energy values","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.normalize_energies_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize energies locally for a PBM — pbm.normalize_energies_local","title":"Normalize energies locally for a PBM — pbm.normalize_energies_local","text":"function performs local normalization energies given PBM.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.normalize_energies_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize energies locally for a PBM — pbm.normalize_energies_local","text":"","code":"pbm.normalize_energies_local(pbm, energies)"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.normalize_energies_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize energies locally for a PBM — pbm.normalize_energies_local","text":"pbm PBM object energies matrix local energy values normalize","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.normalize_energies_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize energies locally for a PBM — pbm.normalize_energies_local","text":"matrix locally normalized energy values","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.trim_pssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim a PBM — pbm.trim_pssm","title":"Trim a PBM — pbm.trim_pssm","text":"function trims PBM object removing positions low information content.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.trim_pssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim a PBM — pbm.trim_pssm","text":"","code":"pbm.trim_pssm(pbm, bits_thresh = 0.1)"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.trim_pssm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim a PBM — pbm.trim_pssm","text":"pbm PBM object bits_thresh threshold trimming positions (default 0.1)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm.trim_pssm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim a PBM — pbm.trim_pssm","text":"trimmed PBM object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.compute.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute energies / response for a list of PBMs on given sequences — pbm_list.compute","title":"Compute energies / response for a list of PBMs on given sequences — pbm_list.compute","text":"function computes energies list PBMs given sequences.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.compute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute energies / response for a list of PBMs on given sequences — pbm_list.compute","text":"","code":"pbm_list.compute(   pbm_list,   sequences,   response = FALSE,   func = \"logSumExp\",   normalize_energies = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.compute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute energies / response for a list of PBMs on given sequences — pbm_list.compute","text":"pbm_list list PBM objects sequences set sequences compute energies. response logical flag indicating whether compute response. Default FALSE. func function use combine PWMs sequence. Either 'logSumExp' 'max'. default 'logSumExp'. normalize_energies logical flag indicating whether normalize energies range 0-10. Default TRUE. Note response computation requires normalized energies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.compute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute energies / response for a list of PBMs on given sequences — pbm_list.compute","text":"matrix containing computed energies PBM","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.compute_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract local PBM scores / response for a list of PBMs given sequences — pbm_list.compute_local","title":"Extract local PBM scores / response for a list of PBMs given sequences — pbm_list.compute_local","text":"function extracts local PBM scores sequences optionally computes response list PBMs.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.compute_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract local PBM scores / response for a list of PBMs given sequences — pbm_list.compute_local","text":"","code":"pbm_list.compute_local(pbm_list, sequences, response = FALSE, scaling_q = NULL)"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.compute_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract local PBM scores / response for a list of PBMs given sequences — pbm_list.compute_local","text":"pbm_list list PBM objects sequences vector DNA sequences response Logical, whether compute response (default FALSE) scaling_q Scaling quantile normalization (default NULL)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.compute_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract local PBM scores / response for a list of PBMs given sequences — pbm_list.compute_local","text":"list matrices containing extracted local energies PBM","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.gextract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract PBM scores / response for a list of PBMs — pbm_list.gextract","title":"Extract PBM scores / response for a list of PBMs — pbm_list.gextract","text":"function extracts  PBM scores genomic intervals optionally computes response list PBMs.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.gextract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract PBM scores / response for a list of PBMs — pbm_list.gextract","text":"","code":"pbm_list.gextract(   pbm_list,   intervals,   response = FALSE,   func = \"logSumExp\",   normalize_energies = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.gextract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract PBM scores / response for a list of PBMs — pbm_list.gextract","text":"pbm_list list PBM objects intervals Genomic intervals extract response Logical, whether compute response (default FALSE) func function use combine PWMs sequence. Either 'logSumExp' 'max'. default 'logSumExp'. normalize_energies logical flag indicating whether normalize energies range 0-10. Default TRUE. Note response computation requires normalized energies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.gextract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract PBM scores / response for a list of PBMs — pbm_list.gextract","text":"intervals, additional column containing PBM scores / response PBM","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.gextract_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract local PBM scores / response for a list of PBMs — pbm_list.gextract_local","title":"Extract local PBM scores / response for a list of PBMs — pbm_list.gextract_local","text":"function extracts local PBM scores genomic intervals optionally computes response list PBMs.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.gextract_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract local PBM scores / response for a list of PBMs — pbm_list.gextract_local","text":"","code":"pbm_list.gextract_local(   pbm_list,   intervals,   response = FALSE,   scaling_q = NULL )"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.gextract_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract local PBM scores / response for a list of PBMs — pbm_list.gextract_local","text":"pbm_list list PBM objects intervals Genomic intervals extract response Logical, whether compute response (default FALSE) scaling_q Scaling quantile normalization (default NULL)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.gextract_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract local PBM scores / response for a list of PBMs — pbm_list.gextract_local","text":"list matrices containing extracted local energies PBM","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.multi_traj.compute_energy.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.compute_energy","title":"Compute energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.compute_energy","text":"Compute energy list pbm lists (multiple trajectories)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.multi_traj.compute_energy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.compute_energy","text":"","code":"pbm_list.multi_traj.compute_energy(   multi_traj,   sequences,   func = \"logSumExp\",   normalize_energies = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.multi_traj.compute_energy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.compute_energy","text":"multi_traj list PBM lists sequences set sequences compute energies. func function use combine PWMs sequence. Either 'logSumExp' 'max'. default 'logSumExp'. normalize_energies logical flag indicating whether normalize energies range 0-10. Default TRUE. Note response computation requires normalized energies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.multi_traj.compute_energy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.compute_energy","text":"matrix containing computed energies PBM","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.multi_traj.gextract_energy.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.gextract_energy","title":"Extract energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.gextract_energy","text":"Extract energy list pbm lists (multiple trajectories)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.multi_traj.gextract_energy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.gextract_energy","text":"","code":"pbm_list.multi_traj.gextract_energy(   multi_traj,   intervals,   func = \"logSumExp\",   normalize_energies = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.multi_traj.gextract_energy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.gextract_energy","text":"multi_traj list PBM lists intervals Genomic intervals extract func function use combine PWMs sequence. Either 'logSumExp' 'max'. default 'logSumExp'. normalize_energies logical flag indicating whether normalize energies range 0-10. Default TRUE. Note response computation requires normalized energies.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.multi_traj.gextract_energy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract energy for a list of pbm lists (multiple trajectories) — pbm_list.multi_traj.gextract_energy","text":"matrix containing computed energies PBM","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.trim_pssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim a list of PBMs — pbm_list.trim_pssm","title":"Trim a list of PBMs — pbm_list.trim_pssm","text":"Trim list PBMs","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.trim_pssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim a list of PBMs — pbm_list.trim_pssm","text":"","code":"pbm_list.trim_pssm(pbm_list, bits_thresh = 0.1)"},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.trim_pssm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim a list of PBMs — pbm_list.trim_pssm","text":"pbm_list list PBM objects bits_thresh threshold trimming positions (default 0.1)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pbm_list.trim_pssm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim a list of PBMs — pbm_list.trim_pssm","text":"list trimmed PBM objects","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://tanaylab.github.io/iceqream/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_cell_type_normalization_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create comparison scatter plots showing normalization effects between two cell types — plot_cell_type_normalization_scatter","title":"Create comparison scatter plots showing normalization effects between two cell types — plot_cell_type_normalization_scatter","text":"Creates series scatter plots comparing ATAC-seq signals two cell types stage normalization process. plots show raw signals, regional normalization, constitutive peak normalization, probability normalization single combined figure.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_cell_type_normalization_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create comparison scatter plots showing normalization effects between two cell types — plot_cell_type_normalization_scatter","text":"","code":"plot_cell_type_normalization_scatter(   obj,   cell_type1,   cell_type2,   peaks_f = NULL )"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_cell_type_normalization_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create comparison scatter plots showing normalization effects between two cell types — plot_cell_type_normalization_scatter","text":"obj List. preprocessed ATAC-seq data object, output preprocess_data cell_type1 Character. Name first cell type plot (x-axis) cell_type2 Character. Name second cell type plot (y-axis) peaks_f Logical vector NULL. Optional filter selecting specific peaks. NULL, peaks used. Default: NULL","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_cell_type_normalization_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create comparison scatter plots showing normalization effects between two cell types — plot_cell_type_normalization_scatter","text":"ggplot2 object containing four scatter plots arranged horizontally using patchwork, showing progression normalization effects","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_cell_type_normalization_scatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create comparison scatter plots showing normalization effects between two cell types — plot_cell_type_normalization_scatter","text":"function creates four scatter plots showing: Raw ATAC signal (log2 transformed) Region-normalized signal Constitutive peak-normalized signal Probability-normalized signal plot includes: Points colored peak type (constitutive vs variable) diagonal reference line","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/plot_cell_type_normalization_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create comparison scatter plots showing normalization effects between two cell types — plot_cell_type_normalization_scatter","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage comparing two cell types p <- plot_cell_type_normalization_scatter(     atac_obj,     cell_type1 = \"CD4_T\",     cell_type2 = \"CD8_T\" )  # Plot specific peaks using a filter p <- plot_cell_type_normalization_scatter(     atac_obj,     cell_type1 = \"CD4_T\",     cell_type2 = \"CD8_T\",     peaks_f = atac_obj$peaks$tss_dist < 1000 ) } # }"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_iq_locus.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot IQ Locus — plot_iq_locus","title":"Plot IQ Locus — plot_iq_locus","text":"function generates plot IQ locus, including DNA sequence, motif responses, ATAC-seq tracks.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_iq_locus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot IQ Locus — plot_iq_locus","text":"","code":"plot_iq_locus(   interval,   pbm_list,   atac_tracks,   width = 500,   ext_width = 200000,   T_emax = 8,   T_rmax = NULL,   motifs = NULL,   plot_others = FALSE,   trim_pbms = TRUE,   trim_bits_thresh = 0.1,   bits_threshold = NULL,   order_motifs = TRUE,   atac_names = atac_tracks,   atac_colors = NULL,   atac_sizes = NULL,   line_thresh = 0.9,   title = NULL,   score = NULL,   predicted_score = NULL,   dna = NULL,   norm_q = 0.995,   tracks_q = NULL,   iterator = 20,   norm_intervals = gintervals.all(),   atac_smooth = 2,   ext_atac_smooth = atac_smooth * 5,   tn5bias_track = \"tn5bias\",   normalize_tn5bias = TRUE,   tss_intervals = \"intervs.global.tss\",   exon_intervals = \"intervs.global.exon\",   annot_track = NULL,   annot_track_name = NULL,   annot_colors = c(\"#FF9800\", \"#009688\"),   annot_track_iterator = 1,   annot_track_smooth = 1,   annot_intervals = NULL,   annot_intervals_color = \"darkgreen\",   mark_conservation = FALSE,   conservation_threshold = 1.5,   scale_cex = 500,   dna_height = 0.03,   filename = NULL,   dev = grDevices::pdf,   plot_width = 15,   plot_height = 8,   base_size = 8,   base_family = \"ArialMT\",   rasterize = FALSE,   raster_device = \"ragg\",   ... )"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_iq_locus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot IQ Locus — plot_iq_locus","text":"interval genomic interval plot. pbm_list list PBM objects. atac_tracks vector ATAC-seq track names plot. width Width plot bp. ext_width Width top plot bp. T_emax Numeric, threshold maximum energy. T_rmax Numeric, threshold maximum response. motifs list specific motifs plot. plot_others Logical, whether plot motifs pass threshold specific motifs provided. trim_pbms Logical, whether trim PBM objects removing positions low information content beginning end PSSM. trim_bits_thresh Numeric, threshold trimming PBM objects. bits_threshold Numeric, threshold trimming PSSMs. order_motifs Logical, whether order motifs maximum response. atac_names Character vector, names ATAC-seq tracks. atac_colors Named vector, colors ATAC-seq tracks. atac_sizes Named vector, line sizes ATAC-seq tracks. line_thresh Numeric, threshold drawing vertical lines. title Character, optional title plot. score Numeric, optional score display plot title. predicted_score Numeric, optional predicted score display plot title. dna Character, DNA sequence plot. NULL, sequence extracted interval. norm_q Numeric, quantile normalization. vector, length atac_names. tracks_q Data frame, pre-computed quantiles tracks. 'type' column 'q' column. iterator Numeric, iterator gextract. norm_intervals Genomic intervals normalization. atac_smooth Numeric, smoothing factor ATAC-seq tracks. ext_atac_smooth Numeric, smoothing factor top plot. tn5bias_track Character, name Tn5 bias track. normalize_tn5bias Logical, whether normalize using TN5 bias track. vector, length atac_names. tss_intervals Character, name TSS intervals track. exon_intervals Character, name exon intervals track. annot_track Character, name annotation track. annot_track_name Character, display name annotation track. annot_colors Named vector, colors annotation track. annot_track_iterator Numeric, iterator annotation track extraction. annot_track_smooth Numeric, smoothing factor annotation track. annot_intervals Genomic intervals annotation (start positions used). annot_intervals_color Color annotation intervals. mark_conservation Logical, whether mark conservation DNA sequence. conservation_threshold Numeric, threshold marking conservation. scale_cex Numeric, scaling factor letter sizes. dna_height Numeric, height row DNA sequence relative entire plot. filename Character, output filename (NULL, plot saved). dev Function, device use plotting. plot_width Numeric, width output plot. plot_height Numeric, height output plot. base_size Numeric, base font size plot. base_family Character, base font family plot. rasterize Logical, whether rasterize certain plot elements better performance. raster_device Character, device use rasterization. ... additional arguments pass plotting function.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_iq_locus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot IQ Locus — plot_iq_locus","text":"ggplot object containing IQ locus plot.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_motif_energy_vs_response_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Motif Energy vs Response Boxplot — plot_motif_energy_vs_response_boxplot","title":"Plot Motif Energy vs Response Boxplot — plot_motif_energy_vs_response_boxplot","text":"function plots boxplot ATAC difference (response) energy levels given motif. subtitle=NULL, subtitle set kologorov-smirnov test lowest (0-3) highest (9-10) energy levels.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_motif_energy_vs_response_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Motif Energy vs Response Boxplot — plot_motif_energy_vs_response_boxplot","text":"","code":"plot_motif_energy_vs_response_boxplot(   traj_model,   motif,   xlab = paste(motif, \"energy\"),   ylab = \"ATAC difference\",   ylim = c(-0.5, 0.5),   fill = \"lightblue1\",   title = \"\",   subtitle = NULL,   outliers = TRUE,   y_data = traj_model@diff_score )"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_motif_energy_vs_response_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Motif Energy vs Response Boxplot — plot_motif_energy_vs_response_boxplot","text":"traj_model trajectory model object. motif motif plot energy levels . xlab label x-axis (default motif name followed \"energy\"). ylab label y-axis (default \"ATAC difference\"). ylim limits y-axis (default -0.5 0.5). fill fill color boxplot (default \"lightblue1\"). title title plot. subtitle subtitle plot (default kologorov-smirnov test lowest highest energy levels). color subtitle set \"darkred\" p-value less 0.01. outliers Whether plot outliers (default TRUE). y_data y data use plot (default ATAC difference).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_motif_energy_vs_response_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Motif Energy vs Response Boxplot — plot_motif_energy_vs_response_boxplot","text":"ggplot object representing boxplot.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_motif_spatial_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot motif spatial frequency — plot_motif_spatial_freq","title":"Plot motif spatial frequency — plot_motif_spatial_freq","text":"function plots spatial frequency given motif across genomic positions.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_motif_spatial_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot motif spatial frequency — plot_motif_spatial_freq","text":"","code":"plot_motif_spatial_freq(   spatial_freqs,   motif,   smooth = 10,   plot_atac = FALSE,   linewidth = 1 )"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_motif_spatial_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot motif spatial frequency — plot_motif_spatial_freq","text":"spatial_freqs data frame containing spatial frequency motifs /ATAC-seq peaks. Output compute_traj_model_spatial_freq. motif string specifying motif plot. smooth integer specifying window size smoothing frequency values. plot_atac logical indicating whether plot ATAC-seq frequency instead motif frequency. linewidth width line plot.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_motif_spatial_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot motif spatial frequency — plot_motif_spatial_freq","text":"ggplot object showing spatial frequency given motif.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_multi_traj_model_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot multi-trajectory model report — plot_multi_traj_model_report","title":"Plot multi-trajectory model report — plot_multi_traj_model_report","text":"function plots report multi-trajectory model. report includes motifs, spatial models, partial responses trajectory model type \"pr\". type \"boxp\", function plot boxplots energy vs response motif. type \"spat\", function plot spatial distribution motifs.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_multi_traj_model_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot multi-trajectory model report — plot_multi_traj_model_report","text":"","code":"plot_multi_traj_model_report(   multi_traj,   filename = NULL,   width = NULL,   height = NULL,   dev = grDevices::pdf,   title = NULL,   use_full = FALSE,   names_map = NULL,   type = \"pr\",   ... )"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_multi_traj_model_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot multi-trajectory model report — plot_multi_traj_model_report","text":"multi_traj TrajectoryModelMulti object. filename Optional. name output file. provided, plot displayed screen. width Optional. width output plot inches. height Optional. height output plot inches. dev Optional. graphics device use output. Default 'pdf'. title Optional. title plot. use_full Optional. Whether use models motifs . Default FALSE. names_map named vector map names motifs new names. type Optional. type plot, can \"pr\", \"boxp\" \"spat\". Default \"pr\". ... Additional arguments passed plotting function.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_multi_traj_model_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot multi-trajectory model report — plot_multi_traj_model_report","text":"ggplot2 object (invsibly filename provided).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_normalization_scatters.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate and save normalization visualization plots — plot_normalization_scatters","title":"Generate and save normalization visualization plots — plot_normalization_scatters","text":"Creates series scatter plots showing progression ATAC-seq signal normalization steps, comparing cell type anchor cell type. plots automatically saved specified directory provided.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_normalization_scatters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate and save normalization visualization plots — plot_normalization_scatters","text":"","code":"plot_normalization_scatters(obj, anchor_cell_type, figures_dir)"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_normalization_scatters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate and save normalization visualization plots — plot_normalization_scatters","text":"obj List. preprocessed ATAC-seq data object, output preprocess_data anchor_cell_type Character. reference cell type use comparisons figures_dir Character NULL. Directory path plots saved. NULL, plots saved disk. Directory created exist.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_normalization_scatters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate and save normalization visualization plots — plot_normalization_scatters","text":"None (called side effects)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_normalization_scatters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate and save normalization visualization plots — plot_normalization_scatters","text":"function generates four visualization plots showing progression normalization: Raw signal comparison (\"1_cell_type_scatter_before_norm.png\") Log2-transformed raw signals basic library size normalization Regional normalization (\"2_cell_type_scatter_region_norm.png\") Shows effects local background correction Constitutive peak normalization (\"3_cell_type_scatter_const_norm.png\") Displays signals normalizing using constitutive peaks Includes probability threshold line specified Probability normalization (\"4_cell_type_scatter_prob.png\") Shows final probability-scaled signals plot compares cell types anchor cell type, points colored distinguish constitutive variable peaks.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_normalization_scatters.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate and save normalization visualization plots — plot_normalization_scatters","text":"File names automatically generated using numerical prefix maintain proper ordering viewing file explorer.","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/plot_normalization_scatters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate and save normalization visualization plots — plot_normalization_scatters","text":"","code":"if (FALSE) { # \\dontrun{ # Generate and save plots plot_normalization_scatters(     atac_obj,     anchor_cell_type = \"CD4_T\",     figures_dir = \"analysis/normalization_plots\" )  # Generate plots without saving plot_normalization_scatters(     atac_obj,     anchor_cell_type = \"CD4_T\",     figures_dir = NULL ) } # }"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_partial_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Partial Response — plot_partial_response","title":"Plot Partial Response — plot_partial_response","text":"function plots partial response given trajectory model motif.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_partial_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Partial Response — plot_partial_response","text":"","code":"plot_partial_response(   traj_model,   motif,   ylim = NULL,   xlab = \"Energy\",   ylab = \"Partial response\",   pointsize = 3 )"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_partial_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Partial Response — plot_partial_response","text":"traj_model trajectory model object. motif motif plot partial response . ylim y-axis limits plot (optional). xlab label x-axis (optional, default \"Energy\"). ylab label y-axis (optional, default \"Partial response\"). pointsize size points scatter plot (optional, default 3).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_partial_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Partial Response — plot_partial_response","text":"ggplot object representing partial response plot.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_prediction_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a boxplot of observed vs predicted ATAC differences — plot_prediction_boxplot","title":"Plot a boxplot of observed vs predicted ATAC differences — plot_prediction_boxplot","text":"function takes trajectory model plots boxplot observed vs predicted ATAC differences. plot grouped observed ATAC difference, divided n_groups quantiles.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_prediction_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a boxplot of observed vs predicted ATAC differences — plot_prediction_boxplot","text":"","code":"plot_prediction_boxplot(traj_model, n_groups = 5)"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_prediction_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a boxplot of observed vs predicted ATAC differences — plot_prediction_boxplot","text":"traj_model trajectory model object n_groups number groups divide observed ATAC difference ","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_prediction_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a boxplot of observed vs predicted ATAC differences — plot_prediction_boxplot","text":"ggplot object representing boxplot","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_prediction_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatter plot of observed vs predicted ATAC difference — plot_prediction_scatter","title":"Plot scatter plot of observed vs predicted ATAC difference — plot_prediction_scatter","text":"Plot scatter plot observed vs predicted ATAC difference","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_prediction_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatter plot of observed vs predicted ATAC difference — plot_prediction_scatter","text":"","code":"plot_prediction_scatter(traj_model, type = NULL, point_size = 1, alpha = 0.5)"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_prediction_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatter plot of observed vs predicted ATAC difference — plot_prediction_scatter","text":"traj_model Trajectory model object. Please run regress_trajectory_motifs first. type \"train\" \"test\". NULL - \"test\" used available, otherwise \"train\". point_size Size points. alpha Transparency points.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_prediction_scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatter plot of observed vs predicted ATAC difference — plot_prediction_scatter","text":"ggplot2 object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_traj_model_clusters_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot trajectory model clusters report — plot_traj_model_clusters_report","title":"Plot trajectory model clusters report — plot_traj_model_clusters_report","text":"Plot trajectory model clusters report","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_traj_model_clusters_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot trajectory model clusters report — plot_traj_model_clusters_report","text":"","code":"plot_traj_model_clusters_report(traj_model, dir, k = 10, spatial_freqs = NULL)"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_traj_model_clusters_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot trajectory model clusters report — plot_traj_model_clusters_report","text":"traj_model trajectory model object dir directory save report files k Number clusters split heatmap spatial_freqs vector spatial frequencies plot. Use compute_traj_model_spatial_freq compute.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_traj_model_clusters_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot trajectory model clusters report — plot_traj_model_clusters_report","text":"None. file called heatmap.png heatmap file called motifs_report.pdf motifs report saved directory.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_traj_model_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a report of trajectory motifs — plot_traj_model_report","title":"Plot a report of trajectory motifs — plot_traj_model_report","text":"Plot report trajectory motifs","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_traj_model_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a report of trajectory motifs — plot_traj_model_report","text":"","code":"plot_traj_model_report(   traj_model,   filename = NULL,   motif_num = NULL,   free_coef_axis = TRUE,   spatial_freqs = NULL,   width = NULL,   height = NULL,   dev = grDevices::pdf,   title = NULL,   motif_titles = NULL,   sort_motifs = TRUE,   names_map = NULL,   boxp_ylim = c(-0.5, 0.5),   boxp_ylab = \"ATAC difference\",   boxp_y_data = traj_model@diff_score,   ... )"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_traj_model_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a report of trajectory motifs — plot_traj_model_report","text":"traj_model Trajectory model object. Please run regress_trajectory_motifs first. filename Filename save plot . NULL, plot returned. motif_num Number motifs plot. NULL, motifs plotted. free_coef_axis Whether use free axis coefficient plots. spatial_freqs Pre-computed spatial frequencies plot. Use compute_traj_model_spatial_freq compute. width Width plot. height Height plot. dev Device use saving plot. Default: grDevices::pdf. title Title plot. motif_titles Titles motifs. NULL, motif names used. sort_motifs Whether sort motifs absolute value coefficients / r2 values. names_map named vector map names motifs new names. boxp_ylim ylimits boxplot energy vs response. boxp_ylab ylab boxplot energy vs response. boxp_y_data y_data boxplot energy vs response. ... Additional arguments pass device.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_traj_model_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a report of trajectory motifs — plot_traj_model_report","text":"ggplot2 object. filename NULL, plot saved file function return invisible(NULL).","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_variable_vs_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scatter of a variable vs ATAC difference — plot_variable_vs_response","title":"Plot scatter of a variable vs ATAC difference — plot_variable_vs_response","text":"Plot scatter variable vs ATAC difference","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_variable_vs_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scatter of a variable vs ATAC difference — plot_variable_vs_response","text":"","code":"plot_variable_vs_response(traj_model, variable, point_size = 0.5)"},{"path":"https://tanaylab.github.io/iceqream/reference/plot_variable_vs_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scatter of a variable vs ATAC difference — plot_variable_vs_response","text":"traj_model Trajectory model object. Please run regress_trajectory_motifs first. variable Variable plot. point_size Size points.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/plot_variable_vs_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scatter of a variable vs ATAC difference — plot_variable_vs_response","text":"ggplot2 object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/predict-IQmodel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for IQmodel — predict,IQmodel-method","title":"Predict method for IQmodel — predict,IQmodel-method","text":"method makes predictions using IQmodel object new data.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/predict-IQmodel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for IQmodel — predict,IQmodel-method","text":"","code":"# S4 method for class 'IQmodel' predict(   object,   new_data = NULL,   intervals = NULL,   sequences = NULL,   pbm_responses = NULL,   iq_responses = NULL )"},{"path":"https://tanaylab.github.io/iceqream/reference/predict-IQmodel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for IQmodel — predict,IQmodel-method","text":"object IQmodel object new_data Optional data frame matrix new data IQ features intervals Optional genomic intervals sequences Optional DNA sequences pbm_responses Optional pre-computed PBM responses iq_responses Optional pre-computed IQ responses","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/predict-IQmodel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for IQmodel — predict,IQmodel-method","text":"vector normalized rescaled predictions","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/predict-TrajectoryModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict TrajectoryModel on new data — predict,TrajectoryModel-method","title":"Predict TrajectoryModel on new data — predict,TrajectoryModel-method","text":"Computes predicted differential accessibility score start end trajectory.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/predict-TrajectoryModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict TrajectoryModel on new data — predict,TrajectoryModel-method","text":"","code":"# S4 method for class 'TrajectoryModel' predict(object, peak_intervals, additional_features = NULL)"},{"path":"https://tanaylab.github.io/iceqream/reference/predict-TrajectoryModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict TrajectoryModel on new data — predict,TrajectoryModel-method","text":"object instance TrajectoryModel. peak_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peak predict. additional_features data frame, representing additional genomic features (e.g. CpG content, distance TSS, etc.) peak. Note NA values replaced 0.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/predict-TrajectoryModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict TrajectoryModel on new data — predict,TrajectoryModel-method","text":"numeric vector predicted differential accessibility scores.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/preprocess_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess and normalize ATAC-seq data — preprocess_data","title":"Preprocess and normalize ATAC-seq data — preprocess_data","text":"function processes ATAC-seq data importing signal tracks, normalizing peaks, performing multiple normalization steps including regional normalization, constitutive peak normalization, probability-based normalization.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/preprocess_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess and normalize ATAC-seq data — preprocess_data","text":"","code":"preprocess_data(   project_name,   files = NULL,   cell_types = NULL,   peaks = NULL,   anchor_cell_type = NULL,   figures_dir = NULL,   peaks_size = 500,   binsize = 20,   overwrite_tracks = FALSE,   overwrite_marginal = FALSE,   window_size = 20000,   minimal_quantile = 0.1,   const_threshold = -16,   const_norm_quant = 1,   const_scaling_quant = 1,   const_quantile = 0.9,   prob1_thresh = NULL,   add_tss_dist = TRUE,   tss_intervals = \"intervs.global.tss\",   proximal_atac_window_size = 20000 )"},{"path":"https://tanaylab.github.io/iceqream/reference/preprocess_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess and normalize ATAC-seq data — preprocess_data","text":"project_name Character string. prefix used track names project identification. files Optional character vector. Paths input ATAC-seq signal files, can bigWig tsv format, see misha::gtrack.import details. Required tracks exist. cell_types Optional character vector. Names cell types process. NULL, derived track names. peaks Data frame file path. Peak intervals required columns 'chrom', 'start', 'end'. anchor_cell_type Optional character. Cell type use reference normalization. NULL, mean cell types used. figures_dir Optional character. Directory path save normalization plots. peaks_size Numeric. Size normalize peaks base pairs. Default: 500 binsize Numeric. Bin size signal track import base pairs. Default: 20 overwrite_tracks Logical. Whether overwrite existing individual cell type tracks. Default: FALSE overwrite_marginal Logical. Whether overwrite existing marginal track. Default: FALSE window_size Numeric. Window size regional normalization base pairs. Default: 2e4 minimal_quantile Numeric. Minimum quantile regional normalization. Default: 0.1 const_threshold Numeric. Log2 threshold identifying constitutive peaks. Default: -16 const_norm_quant Numeric. Quantile constitutive peak normalization. Default: 1 const_scaling_quant Numeric. Scaling quantile constitutive normalization. Default: 1 const_quantile Numeric. Quantile probability normalization threshold. Default: 0.9 prob1_thresh Optional numeric. Threshold probability=1 normalization. NULL, calculated const_quantile. add_tss_dist Logical. Whether add TSS distance peaks. Default: TRUE tss_intervals Character. Name TSS intervals track. Default: \"intervs.global.tss\" proximal_atac_window_size Numeric. Window size proximal ATAC signal computation. peak, feature (punctrured) window signal computed. Default: 2e4","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/preprocess_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess and normalize ATAC-seq data — preprocess_data","text":"list containing: atac: Raw ATAC signal matrix atac_norm: Region-normalized signal matrix atac_norm_const: Constitutive peak-normalized signal matrix atac_norm_prob: Probability-normalized signal matrix peaks: Data frame peak information additional_features: Data frame additional features (dinucleotide distribution punctured regional ATAC signal) params: List parameters used normalization","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/preprocess_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preprocess and normalize ATAC-seq data — preprocess_data","text":"function performs several normalization steps: Regional normalization using punctured windows around peaks Identification normalization constitutive peaks Conversion probability scores visualization enabled (figures_dir provided), function generates scatter plots showing effects normalization step.","code":""},{"path":[]},{"path":"https://tanaylab.github.io/iceqream/reference/preprocess_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess and normalize ATAC-seq data — preprocess_data","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage with existing tracks result <- preprocess_data(     project_name = \"my_project\",     peaks = \"peaks.bed\",     figures_dir = \"figures\" )  # Full preprocessing with new data result <- preprocess_data(     project_name = \"my_project\",     files = c(\"celltype1.bw\", \"celltype2.bw\"),     peaks = \"peaks.bed\",     anchor_cell_type = \"celltype1\",     figures_dir = \"figures\",     overwrite_tracks = TRUE ) } # }"},{"path":"https://tanaylab.github.io/iceqream/reference/regress_trajectory_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform motif regression on ATAC trajectories. — regress_trajectory_motifs","title":"Perform motif regression on ATAC trajectories. — regress_trajectory_motifs","text":"function performs motif regression ATAC trajectories. can work either ATAC scores trajectory bins directly differential accessibility. basic inputs regression genomic positions peaks, two vectors ATAC scores (atac_scores matrix) differential accessibility (atac_diff), database energies computed genomics positions. Optionally, additional features epigenomic features can provided.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/regress_trajectory_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform motif regression on ATAC trajectories. — regress_trajectory_motifs","text":"","code":"regress_trajectory_motifs(   peak_intervals,   atac_scores = NULL,   atac_diff = NULL,   normalize_bins = TRUE,   norm_intervals = NULL,   max_motif_num = 30,   n_clust_factor = 1,   motif_energies = NULL,   norm_motif_energies = NULL,   pssm_db = iceqream::motif_db,   additional_features = NULL,   min_tss_distance = 5000,   bin_start = 1,   bin_end = NULL,   min_initial_energy_cor = 0.05,   normalize_energies = TRUE,   energy_norm_quantile = 1,   norm_energy_max = 10,   n_prego_motifs = 0,   traj_prego = NULL,   min_diff = 0.1,   distill_on_diff = FALSE,   prego_min_diff = min_diff,   prego_sample_for_kmers = TRUE,   prego_sample_fraction = 0.1,   prego_energy_norm_quantile = 1,   prego_spat_bin_size = NULL,   prego_spat_num_bins = NULL,   seed = 60427,   feature_selection_beta = 0.003,   lambda = 0.00001,   alpha = 1,   filter_using_r2 = FALSE,   r2_threshold = 0.0005,   parallel = TRUE,   peaks_size = 500,   spat_num_bins = NULL,   spat_bin_size = NULL,   kmer_sequence_length = 300,   include_interactions = FALSE,   interaction_threshold = 0.001,   max_motif_interaction_n = NULL,   max_add_interaction_n = NULL,   max_interaction_n = NULL,   symmetrize_spat = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/regress_trajectory_motifs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform motif regression on ATAC trajectories. — regress_trajectory_motifs","text":"peak_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peak. atac_scores Optional. numeric matrix, representing mean ATAC score per bin per peak. Rows: peaks, columns: bins. default iceqream regress last column minus first column. want regress something else, please either change bin_start bin_end, provide atac_diff instead. normalize_bins TRUE, scores normalized 0 1. atac_diff Optional. numeric vector representing differential accessibility start end trajectory. Either atac_scores must provided. normalize_bins whether normalize ATAC scores 0 1. Default: TRUE norm_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peaks used energy normalization. NULL, function use peak_intervals normalization. max_motif_num maximum number motifs consider. Default: 50 n_clust_factor factor divide number keep clustering. e.g. n_clust_factor > 1 number motifs keep reduced factor n_clust_factor. Default: 1 motif_energies numeric matrix, representing energy motif peak. NULL, function use pssm_db calculate motif energies. Note might take . norm_motif_energies numeric matrix, representing normalized energy motif interval norm_intervals. NULL, function use pssm_db calculate motif energies. Note might take . pssm_db data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name. motifs motif_energies (column names) present 'motif' column. Default: motifs. additional_features data frame, representing additional genomic features (e.g. CpG content, distance TSS, etc.) peak. Note NA values replaced 0. min_tss_distance distance Transcription Start Site (TSS) classify peak enhancer. Default: 5000. NULL, filtering performed - use option peaks already filtered.  Note order filter peaks close TSS, current misha genome must intervals set called intervs.global.tss. bin_start start trajectory. Default: 1 bin_end end trajectory. Default: last bin (used atac_scores provided) min_initial_energy_cor minimal correlation motif normalized energy ATAC difference. normalize_energies whether normalize motif energies. Set FALSE motif energies already normalized. energy_norm_quantile quantile energy used normalization. Default: 1 norm_energy_max maximum value normalized energy. Default: 10 n_prego_motifs number prego motifs (de-novo motifs) consider. traj_prego output learn_traj_prego. provided, additional prego models inferred. min_diff minimal ATAC difference peak participate initial prego motif inference distillation step (distill_on_diff TRUE). distill_on_diff whether distill motifs based differential accessibility. FALSE, peaks used distillation, TRUE - peaks differential accessibility >= min_diff used. prego_sample_for_kmers whether use sample peaks kmer screening. Default: TRUE prego_sample_fraction Fraction peaks sample prego motif inference. smaller number faster might lead -fitting. Default: 0.1 seed random seed reproducibility. feature_selection_beta beta parameter used feature selection. lambda user supplied lambda sequence. Typical usage program compute lambda sequence based nlambda lambda.min.ratio. Supplying value lambda overrides . WARNING: use care. Avoid supplying single value lambda (predictions CV use predict() instead).  Supply instead decreasing sequence lambda values. glmnet relies warms starts speed, often faster fit whole path compute single fit. alpha elasticnet mixing parameter, \\(0\\le\\alpha\\le 1\\). penalty defined $$(1-\\alpha)/2||\\beta||_2^2+\\alpha||\\beta||_1.$$ alpha=1 lasso penalty, alpha=0 ridge penalty. filter_using_r2 whether filter features using R^2. r2_threshold minimal R^2 feature included model. parallel whether use parallel processing glmnet. peaks_size size peaks extract sequences . Default: 500bp spat_num_bins number spatial bins use. spat_bin_size size spatial bin. kmer_sequence_length length kmer sequence use kmer screening. default full sequence used. include_interactions whether include interactions motifs / additional fetures model features. IQ create interactions significant additional features motifs, significant motifs. Default: FALSE interaction_threshold threshold selecting features create interactions. IQ learns linear model features selects features coefficients threshold. Default: 0.001 max_motif_interaction_n maximum number motifs consider interactions. NULL, motifs interaction_threshold considered. Default: NULL max_add_interaction_n maximum number additional features consider interactions. NULL, additional features interaction_threshold considered. Default: NULL max_interaction_n maximum number interactions consider. symmetrize_spat TRUE, spatial model symmetrized around center bin. Default: TRUE. prego_enrgy_norm_quantile, prego_spat_bin_size, prego_spat_num_bins parameters prego motif inference. See prego::regress_pwm details.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/regress_trajectory_motifs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform motif regression on ATAC trajectories. — regress_trajectory_motifs","text":"instance TrajectoryModel containing model information results: model: final General Linear Model (GLM) object. motif_models: Named List, PSSM spatial models motif cluster. normalized_energies: Numeric vector, normalized energies motif peak. additional_features: data frame additional features. diff_score: Numeric, normalized score differential accessibility 'bin_start' 'bin_end'. predicted_diff_score: Numeric, predicted differential accessibility score 'bin_start' 'bin_end'. initial_prego_models: List, inferred prego models initial step algorithm. peak_intervals: data frame, indicating genomic positions ('chrom', 'start', 'end') peak used training. Print model see details.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/regress_trajectory_motifs_manifold.html","id":null,"dir":"Reference","previous_headings":"","what":"Regress trajectory motifs of a full manifold (multiple trajectories) — regress_trajectory_motifs_manifold","title":"Regress trajectory motifs of a full manifold (multiple trajectories) — regress_trajectory_motifs_manifold","text":"Regress trajectory motifs full manifold (multiple trajectories)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/regress_trajectory_motifs_manifold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regress trajectory motifs of a full manifold (multiple trajectories) — regress_trajectory_motifs_manifold","text":"","code":"regress_trajectory_motifs_manifold(   peak_intervals,   atac_diff_add_mat,   norm_intervals = NULL,   max_motif_num = 120,   target_traj_motif_num = 30,   n_clust_factor = 1,   motif_energies = NULL,   norm_motif_energies = NULL,   pssm_db = iceqream::motif_db,   additional_features = NULL,   min_tss_distance = 5000,   bin_start = 1,   bin_end = NULL,   min_initial_energy_cor = 0.05,   normalize_energies = TRUE,   energy_norm_quantile = 1,   norm_energy_max = 10,   n_prego_motifs = 0,   traj_prego = NULL,   initial_min_diff = 0.1,   min_diff = initial_min_diff,   prego_sample_for_kmers = TRUE,   prego_sample_fraction = 0.1,   seed = 60427,   feature_selection_beta = 0.003,   lambda = 0.00001,   alpha = 1,   filter_using_r2 = FALSE,   r2_threshold = 0.0005,   parallel = TRUE,   peaks_size = 500,   spat_num_bins = NULL,   spat_bin_size = 2,   kmer_sequence_length = 300,   include_interactions = FALSE,   interaction_threshold = 0.001,   max_motif_interaction_n = NULL,   max_add_interaction_n = NULL,   ... )"},{"path":"https://tanaylab.github.io/iceqream/reference/regress_trajectory_motifs_manifold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regress trajectory motifs of a full manifold (multiple trajectories) — regress_trajectory_motifs_manifold","text":"peak_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peak. norm_intervals data frame, indicating genomic positions ('chrom', 'start', 'end') peaks used energy normalization. NULL, function use peak_intervals normalization. max_motif_num maximum number motifs consider. Default: 50 target_traj_motif_num Number motifs select trajectory. Note actual number motifs can less number, depending data trajectories. n_clust_factor factor divide number keep clustering. e.g. n_clust_factor > 1 number motifs keep reduced factor n_clust_factor. Default: 1 motif_energies numeric matrix, representing energy motif peak. NULL, function use pssm_db calculate motif energies. Note might take . norm_motif_energies numeric matrix, representing normalized energy motif interval norm_intervals. NULL, function use pssm_db calculate motif energies. Note might take . pssm_db data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name. motifs motif_energies (column names) present 'motif' column. Default: motifs. additional_features data frame, representing additional genomic features (e.g. CpG content, distance TSS, etc.) peak. Note NA values replaced 0. min_tss_distance distance Transcription Start Site (TSS) classify peak enhancer. Default: 5000. NULL, filtering performed - use option peaks already filtered.  Note order filter peaks close TSS, current misha genome must intervals set called intervs.global.tss. bin_start start trajectory. Default: 1 bin_end end trajectory. Default: last bin (used atac_scores provided) min_initial_energy_cor minimal correlation motif normalized energy ATAC difference. normalize_energies whether normalize motif energies. Set FALSE motif energies already normalized. energy_norm_quantile quantile energy used normalization. Default: 1 norm_energy_max maximum value normalized energy. Default: 10 n_prego_motifs number prego motifs (de-novo motifs) consider. traj_prego output learn_traj_prego. provided, additional prego models inferred. initial_min_diff minimal ATAC difference peak participate initial prego motif inference. min_diff minimal ATAC difference peak participate initial prego motif inference distillation step (distill_on_diff TRUE). prego_sample_for_kmers whether use sample peaks kmer screening. Default: TRUE prego_sample_fraction Fraction peaks sample prego motif inference. smaller number faster might lead -fitting. Default: 0.1 seed random seed reproducibility. feature_selection_beta beta parameter used feature selection. lambda user supplied lambda sequence. Typical usage program compute lambda sequence based nlambda lambda.min.ratio. Supplying value lambda overrides . WARNING: use care. Avoid supplying single value lambda (predictions CV use predict() instead).  Supply instead decreasing sequence lambda values. glmnet relies warms starts speed, often faster fit whole path compute single fit. alpha elasticnet mixing parameter, \\(0\\le\\alpha\\le 1\\). penalty defined $$(1-\\alpha)/2||\\beta||_2^2+\\alpha||\\beta||_1.$$ alpha=1 lasso penalty, alpha=0 ridge penalty. filter_using_r2 whether filter features using R^2. r2_threshold minimal R^2 feature included model. parallel whether use parallel processing glmnet. peaks_size size peaks extract sequences . Default: 500bp spat_num_bins number spatial bins use. spat_bin_size size spatial bin. kmer_sequence_length length kmer sequence use kmer screening. default full sequence used. include_interactions whether include interactions motifs / additional fetures model features. IQ create interactions significant additional features motifs, significant motifs. Default: FALSE interaction_threshold threshold selecting features create interactions. IQ learns linear model features selects features coefficients threshold. Default: 0.001 max_motif_interaction_n maximum number motifs consider interactions. NULL, motifs interaction_threshold considered. Default: NULL max_add_interaction_n maximum number additional features consider interactions. NULL, additional features interaction_threshold considered. Default: NULL ... Arguments passed distill_traj_model_multi traj_models list trajectory models. distill_single Logical indicating whether distill clusters single motif. learn_single_spatial Logical indicating whether learn spatial features clusters single motif, skip . use_all_motifs Logical indicating whether use motifs resulting models. FALSE, motifs clusters motif original model used. cluster_report_dir directory store cluster reports. NULL, png created cluster. filter_models Logical indicating whether filter models distillation. Defaults TRUE. unique_motifs Logical indicating whether keep unique motifs. Defaults FALSE. intra_cor_thresh threshold average intra-cluster correlation split clusters. NULL, splitting done. bits_threshold minimal sum bits feature included model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/regress_trajectory_motifs_manifold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regress trajectory motifs of a full manifold (multiple trajectories) — regress_trajectory_motifs_manifold","text":"TrajectoryModelMulti object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/relearn_traj_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Relearn Trajectory Model — relearn_traj_model","title":"Relearn Trajectory Model — relearn_traj_model","text":"function relearns trajectory model using glmnet package, without re-inferring motif models.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/relearn_traj_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relearn Trajectory Model — relearn_traj_model","text":"","code":"relearn_traj_model(   traj_model,   new_energies = FALSE,   new_logist = FALSE,   lambda = NULL,   use_additional_features = TRUE,   use_motifs = TRUE,   verbose = FALSE,   rescale_pred = TRUE,   relearn_model = TRUE )"},{"path":"https://tanaylab.github.io/iceqream/reference/relearn_traj_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relearn Trajectory Model — relearn_traj_model","text":"traj_model trajectory model object. new_energies TRUE - recreate energies. Default FALSE. new_logist TRUE - recreate logistic features. Default FALSE. new_energies TRUE, automatically set TRUE. lambda lambda value use relearning. NULL, lambda value trajectory model used. use_additional_features logical value indicating whether use additional features. Default TRUE. use_motifs logical value indicating whether use motif models. Default TRUE. verbose Logical indicating whether display additional information. rescale_pred Logical indicating whether rescale predicted values. Default TRUE. relearn_model Logical indicating whether relearn model. Default TRUE.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/relearn_traj_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relearn Trajectory Model — relearn_traj_model","text":"updated trajectory model object.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/remove_motif_models_from_traj.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove motif models from trajectory model — remove_motif_models_from_traj","title":"Remove motif models from trajectory model — remove_motif_models_from_traj","text":"function removes specified motif models given trajectory model. updates model, motif models, predicted difference score, model features, coefficients, normalized energies, features R^2 trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/remove_motif_models_from_traj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove motif models from trajectory model — remove_motif_models_from_traj","text":"","code":"remove_motif_models_from_traj(traj_model, motif_models, verbose = TRUE)"},{"path":"https://tanaylab.github.io/iceqream/reference/remove_motif_models_from_traj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove motif models from trajectory model — remove_motif_models_from_traj","text":"traj_model trajectory model object remove motif models . motif_models character vector specifying names motif models remove. verbose logical value indicating whether display information R^2 removing motif models. Default TRUE.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/remove_motif_models_from_traj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove motif models from trajectory model — remove_motif_models_from_traj","text":"updated trajectory model object removing motif models.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/rename_motif_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename motif models in a trajectory model — rename_motif_models","title":"Rename motif models in a trajectory model — rename_motif_models","text":"function renames motif models trajectory model based provided names_map. names_map named character vector names current names motif models values new names.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/rename_motif_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename motif models in a trajectory model — rename_motif_models","text":"","code":"rename_motif_models(traj_model, names_map)"},{"path":"https://tanaylab.github.io/iceqream/reference/rename_motif_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename motif models in a trajectory model — rename_motif_models","text":"traj_model trajectory model object modify. names_map named character vector specifying mapping current motif model names new names. Can generated using match_traj_model_motif_names function.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/rename_motif_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename motif models in a trajectory model — rename_motif_models","text":"modified trajectory model object renamed motif models.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale Values Based on Original Scale Factors — rescale","title":"Rescale Values Based on Original Scale Factors — rescale","text":"function applies reverse operation normalization numeric vector x based scale factors derived original vector orig_x. effectively attempts map values x back original scale applying inverse operations scaling translation based minimum maximum values found orig_x. process involves scaling x maximum value (subtracting minimum value) orig_x adding minimum value orig_x element.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale Values Based on Original Scale Factors — rescale","text":"","code":"rescale(x, orig_x)"},{"path":"https://tanaylab.github.io/iceqream/reference/rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale Values Based on Original Scale Factors — rescale","text":"x numeric vector needs rescaled original range. orig_x original numeric vector scale factors derived.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale Values Based on Original Scale Factors — rescale","text":"numeric vector values rescaled original range based scale factors orig_x.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale Values Based on Original Scale Factors — rescale","text":"","code":"# Generate random values and normalize orig_x <- rnorm(100) normed_x <- norm01(orig_x) # Rescale normalized values back to original range rescaled_x <- rescale(normed_x, orig_x) range(rescaled_x) # This should closely match the range of orig_x #> [1] -2.808011  2.654898 range(orig_x) #> [1] -2.808011  2.654898"},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQFeature-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for IQFeature — show,IQFeature-method","title":"Show method for IQFeature — show,IQFeature-method","text":"method defines IQFeature object displayed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQFeature-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for IQFeature — show,IQFeature-method","text":"","code":"# S4 method for IQFeature show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQFeature-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for IQFeature — show,IQFeature-method","text":"object IQFeature object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQFeatureGroup-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for IQFeatureGroup — show,IQFeatureGroup-method","title":"Show method for IQFeatureGroup — show,IQFeatureGroup-method","text":"method defines IQFeatureGroup object displayed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQFeatureGroup-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for IQFeatureGroup — show,IQFeatureGroup-method","text":"","code":"# S4 method for IQFeatureGroup show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQFeatureGroup-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for IQFeatureGroup — show,IQFeatureGroup-method","text":"object IQFeatureGroup object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQSeqFeature-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for IQSeqFeature — show,IQSeqFeature-method","title":"Show method for IQSeqFeature — show,IQSeqFeature-method","text":"method defines IQSeqFeature object displayed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQSeqFeature-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for IQSeqFeature — show,IQSeqFeature-method","text":"","code":"# S4 method for IQSeqFeature show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQSeqFeature-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for IQSeqFeature — show,IQSeqFeature-method","text":"object IQSeqFeature object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQmodel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show method for IQmodel — show,IQmodel-method","title":"Show method for IQmodel — show,IQmodel-method","text":"method defines IQmodel object displayed.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQmodel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show method for IQmodel — show,IQmodel-method","text":"","code":"# S4 method for IQmodel show(object)"},{"path":"https://tanaylab.github.io/iceqream/reference/show-IQmodel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show method for IQmodel — show,IQmodel-method","text":"object IQmodel object","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/split_traj_model_to_train_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a trajectory model into train and test sets — split_traj_model_to_train_test","title":"Split a trajectory model into train and test sets — split_traj_model_to_train_test","text":"function takes trajectory model splits train test sets.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/split_traj_model_to_train_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a trajectory model into train and test sets — split_traj_model_to_train_test","text":"","code":"split_traj_model_to_train_test(traj_model)"},{"path":"https://tanaylab.github.io/iceqream/reference/split_traj_model_to_train_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a trajectory model into train and test sets — split_traj_model_to_train_test","text":"traj_model trajectory model split","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/split_traj_model_to_train_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a trajectory model into train and test sets — split_traj_model_to_train_test","text":"list train test sets","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_to_iq_feature_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert trajectory model to IQ feature list — traj_model_to_iq_feature_list","title":"Convert trajectory model to IQ feature list — traj_model_to_iq_feature_list","text":"function takes trajectory model object converts additional features list IQ features.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_to_iq_feature_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert trajectory model to IQ feature list — traj_model_to_iq_feature_list","text":"","code":"traj_model_to_iq_feature_list(traj_model)"},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_to_iq_feature_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert trajectory model to IQ feature list — traj_model_to_iq_feature_list","text":"traj_model trajectory model object convert.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_to_iq_feature_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert trajectory model to IQ feature list — traj_model_to_iq_feature_list","text":"list IQ features, feature contains feature name corresponding coefficients.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_to_pbm_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a trajectory model to a list of PBM objects — traj_model_to_pbm_list","title":"Convert a trajectory model to a list of PBM objects — traj_model_to_pbm_list","text":"function takes trajectory model converts list PBM objects.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_to_pbm_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a trajectory model to a list of PBM objects — traj_model_to_pbm_list","text":"","code":"traj_model_to_pbm_list(   traj_model,   func = \"logSumExp\",   normalization_intervals = traj_model@normalization_intervals,   bits_threshold = NULL )"},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_to_pbm_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a trajectory model to a list of PBM objects — traj_model_to_pbm_list","text":"traj_model trajectory model object func function use computing energies \"logSumExp\" \"max\". Default \"logSumExp\" normalization_intervals normalization intervals use computing energies. Default normalization intervals trajectory model. bits_threshold threshold trimming PSSM (default NULL, trimming)","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_to_pbm_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a trajectory model to a list of PBM objects — traj_model_to_pbm_list","text":"list PBM objects","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_variable_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Partial Response for Trajectory Model — traj_model_variable_response","title":"Compute Partial Response for Trajectory Model — traj_model_variable_response","text":"function computes partial response given trajectory model.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_variable_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Partial Response for Trajectory Model — traj_model_variable_response","text":"","code":"traj_model_variable_response(   traj_model,   vars = NULL,   lambda = 0.00001,   reverse = FALSE )"},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_variable_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Partial Response for Trajectory Model — traj_model_variable_response","text":"traj_model trajectory model object. vars vector variables compute partial response . Default NULL (variables). lambda regularization parameter. Default 1e-5. reverse TRUE, partial response computed variables except ones vars. Default FALSE.","code":""},{"path":"https://tanaylab.github.io/iceqream/reference/traj_model_variable_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Partial Response for Trajectory Model — traj_model_variable_response","text":"data frame computed partial responses, column names variables.","code":""}]
